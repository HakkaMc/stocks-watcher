{"version":3,"sources":["modules/ChartGroups/modules/AddGroup/AddGroup.tsx","../../../node_modules/@material-ui/icons/esm/Launch.js","modules/ChartGroups/modules/Item/Item.tsx","modules/ChartGroups/ChartGroups.tsx","../../../node_modules/@material-ui/core/esm/Divider/Divider.js","modules/ChartGroups/modules/AddGroup/styles.module.scss","modules/ChartGroups/modules/Item/styles.module.scss","modules/ChartGroups/styles.module.scss"],"names":["AddGroup","useMutation","CREATE_CHART_GROUP","fetchPolicy","refetchQueries","query","GET_CHART_GROUPS","createChartGroup","form","useForm","save","useCallback","name","getValues","variables","reset","className","styles","container","placeholder","input","IconButton","onClick","Save","color","saveIcon","createSvgIcon","React","d","Item","data","REMOVE_CHART_GROUP","removeChartGroup","REMOVE_CHART_FROM_CHART_GROUP","removeChartFromChartGroup","removeGroup","chartGroupId","_id","removeChart","symbol","Box","mb","ml","mt","mr","group","header","grey","href","ROUTES","ChartGroupView","replace","target","rel","link","Launch","Close","symbolList","charts","map","chartSettings","symbolContainer","description","symbolData","Divider","ChartGroups","useLazyQuery","getChartGroups","chartGroupsResponse","useEffect","paddingLeft","bgcolor","chartGroup","props","ref","_props$absolute","absolute","classes","_props$component","component","Component","_props$flexItem","flexItem","_props$light","light","_props$orientation","orientation","_props$role","role","undefined","_props$variant","variant","other","_objectWithoutProperties","_extends","clsx","root","vertical","withStyles","theme","height","margin","border","flexShrink","backgroundColor","palette","divider","position","bottom","left","width","inset","marginLeft","fade","middle","spacing","marginRight","alignSelf","module","exports"],"mappings":"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","file":"static/js/ChartGroups.592ecff7.chunk.js","sourcesContent":["import React, { useCallback } from 'react'\nimport { useForm } from 'react-hook-form'\nimport { Button, Checkbox, IconButton, Box } from '@material-ui/core'\nimport { Save as SaveIcon } from '@material-ui/icons'\nimport { useSubscription, useMutation, useQuery } from '@apollo/client'\nimport { Input } from '../../../../form'\nimport { CREATE_CHART_GROUP, GET_CHART_GROUPS } from '../../../../gqls'\n\nimport styles from './styles.module.scss'\n\ntype FormValues = {\n  name: string\n}\n\nexport const AddGroup = () => {\n  const [createChartGroup] = useMutation(CREATE_CHART_GROUP, {\n    fetchPolicy: 'no-cache',\n    refetchQueries: [\n      {\n        query: GET_CHART_GROUPS\n      }\n    ]\n  })\n\n  const form = useForm<FormValues>()\n\n  const save = useCallback(() => {\n    const { name } = form.getValues()\n    if (name) {\n      createChartGroup({\n        variables: {\n          name\n        }\n      })\n\n      form.reset({ name: '' })\n    }\n  }, [createChartGroup, form])\n\n  return (\n    <div className={styles.container}>\n      <form>\n        <Input form={form} name=\"name\" placeholder=\"New group name\" className={styles.input} />\n        <IconButton onClick={save}>\n          <SaveIcon color=\"primary\" className={styles.saveIcon} />\n        </IconButton>\n      </form>\n    </div>\n  )\n}\n","import * as React from 'react';\nimport createSvgIcon from './utils/createSvgIcon';\nexport default createSvgIcon( /*#__PURE__*/React.createElement(\"path\", {\n  d: \"M19 19H5V5h7V3H5c-1.11 0-2 .9-2 2v14c0 1.1.89 2 2 2h14c1.1 0 2-.9 2-2v-7h-2v7zM14 3v2h3.59l-9.83 9.83 1.41 1.41L19 6.41V10h2V3h-7z\"\n}), 'Launch');","import React, { useCallback } from 'react'\nimport { Box, Typography, IconButton, Divider } from '@material-ui/core'\nimport { grey } from '@material-ui/core/colors'\nimport { Close as CloseIcon, Launch as LaunchIcon } from '@material-ui/icons'\nimport { ChartGroup } from '@sw/shared/src/graphql'\nimport { useSubscription, useMutation, useQuery, useLazyQuery } from '@apollo/client'\nimport styles from './styles.module.scss'\nimport { ROUTES } from '../../../../constants'\nimport { GET_CHART_GROUP, GET_CHART_GROUPS, REMOVE_CHART_FROM_CHART_GROUP, REMOVE_CHART_GROUP } from '../../../../gqls'\n\ntype Props = {\n  data: ChartGroup\n}\n\nexport const Item = ({ data }: Props) => {\n  const [removeChartGroup, removeChartGroupResponse] = useMutation(REMOVE_CHART_GROUP, {\n    fetchPolicy: 'no-cache',\n    refetchQueries: [\n      {\n        query: GET_CHART_GROUPS\n      }\n    ]\n  })\n\n  const [removeChartFromChartGroup, removeChartFromChartGroupResponse] = useMutation(REMOVE_CHART_FROM_CHART_GROUP, {\n    fetchPolicy: 'no-cache',\n    refetchQueries: [\n      {\n        query: GET_CHART_GROUPS\n      }\n    ]\n  })\n\n  const removeGroup = useCallback(() => {\n    removeChartGroup({\n      variables: {\n        chartGroupId: data._id\n      }\n    })\n  }, [removeChartGroup])\n\n  const removeChart = useCallback(\n    (symbol: string) => () => {\n      removeChartFromChartGroup({\n        variables: {\n          chartGroupId: data._id,\n          symbol\n        }\n      })\n    },\n    [removeChartFromChartGroup]\n  )\n\n  return (\n    <Box mb={5} ml={4} mt={4} mr={4} className={styles.group} key={data._id}>\n      <Box className={styles.header}>\n        <Box color={grey[600]}>{data.name}</Box>\n\n        <a\n          href={ROUTES.ChartGroupView.replace(':chartGroupId', data._id)}\n          target=\"_blank\"\n          rel=\"noreferrer\"\n          className={styles.link}\n        >\n          <IconButton>\n            <LaunchIcon />\n          </IconButton>\n        </a>\n\n        <IconButton onClick={removeGroup}>\n          <CloseIcon />\n        </IconButton>\n      </Box>\n      <Box className={styles.symbolList} mb={2}>\n        <table>\n          <tbody>\n            {data.charts?.map((chartSettings) => (\n              <tr key={chartSettings?.symbol}>\n                <td className={styles.symbolContainer}>\n                  <div className={styles.symbol}>{chartSettings?.symbol}</div>\n                  <div className={styles.description}>{chartSettings?.symbolData?.description}</div>\n                </td>\n                <td>\n                  <IconButton onClick={removeChart(chartSettings?.symbol || '')}>\n                    <CloseIcon />\n                  </IconButton>\n                </td>\n              </tr>\n            ))}\n          </tbody>\n        </table>\n      </Box>\n      <Divider />\n    </Box>\n  )\n}\n","import React, { useEffect } from 'react'\nimport { useLazyQuery } from '@apollo/client'\nimport { Box } from '@material-ui/core'\nimport { grey } from '@material-ui/core/colors'\nimport { ChartGroup } from '@sw/shared/src/graphql'\nimport { GET_CHART_GROUPS } from '../../gqls'\n\nimport { AddGroup } from './modules/AddGroup/AddGroup'\nimport { Item } from './modules/Item/Item'\n\nimport styles from './styles.module.scss'\n\nexport const ChartGroups = () => {\n  const [getChartGroups, chartGroupsResponse] = useLazyQuery<{ getChartGroups: Array<ChartGroup> }>(GET_CHART_GROUPS, {\n    fetchPolicy: 'network-only'\n  })\n\n  useEffect(() => {\n    getChartGroups()\n  }, [])\n\n  return (\n    <div>\n      <Box paddingLeft={4} bgcolor={grey[600]} className={styles.header}>\n        <AddGroup />\n      </Box>\n\n      {chartGroupsResponse.data?.getChartGroups.map((chartGroup) => (\n        <Item key={chartGroup._id} data={chartGroup} />\n      ))}\n    </div>\n  )\n}\n","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutProperties from \"@babel/runtime/helpers/esm/objectWithoutProperties\";\nimport * as React from 'react';\nimport PropTypes from 'prop-types';\nimport clsx from 'clsx';\nimport withStyles from '../styles/withStyles';\nimport { fade } from '../styles/colorManipulator';\nexport var styles = function styles(theme) {\n  return {\n    /* Styles applied to the root element. */\n    root: {\n      height: 1,\n      margin: 0,\n      // Reset browser default style.\n      border: 'none',\n      flexShrink: 0,\n      backgroundColor: theme.palette.divider\n    },\n\n    /* Styles applied to the root element if `absolute={true}`. */\n    absolute: {\n      position: 'absolute',\n      bottom: 0,\n      left: 0,\n      width: '100%'\n    },\n\n    /* Styles applied to the root element if `variant=\"inset\"`. */\n    inset: {\n      marginLeft: 72\n    },\n\n    /* Styles applied to the root element if `light={true}`. */\n    light: {\n      backgroundColor: fade(theme.palette.divider, 0.08)\n    },\n\n    /* Styles applied to the root element if `variant=\"middle\"`. */\n    middle: {\n      marginLeft: theme.spacing(2),\n      marginRight: theme.spacing(2)\n    },\n\n    /* Styles applied to the root element if `orientation=\"vertical\"`. */\n    vertical: {\n      height: '100%',\n      width: 1\n    },\n\n    /* Styles applied to the root element if `flexItem={true}`. */\n    flexItem: {\n      alignSelf: 'stretch',\n      height: 'auto'\n    }\n  };\n};\nvar Divider = /*#__PURE__*/React.forwardRef(function Divider(props, ref) {\n  var _props$absolute = props.absolute,\n      absolute = _props$absolute === void 0 ? false : _props$absolute,\n      classes = props.classes,\n      className = props.className,\n      _props$component = props.component,\n      Component = _props$component === void 0 ? 'hr' : _props$component,\n      _props$flexItem = props.flexItem,\n      flexItem = _props$flexItem === void 0 ? false : _props$flexItem,\n      _props$light = props.light,\n      light = _props$light === void 0 ? false : _props$light,\n      _props$orientation = props.orientation,\n      orientation = _props$orientation === void 0 ? 'horizontal' : _props$orientation,\n      _props$role = props.role,\n      role = _props$role === void 0 ? Component !== 'hr' ? 'separator' : undefined : _props$role,\n      _props$variant = props.variant,\n      variant = _props$variant === void 0 ? 'fullWidth' : _props$variant,\n      other = _objectWithoutProperties(props, [\"absolute\", \"classes\", \"className\", \"component\", \"flexItem\", \"light\", \"orientation\", \"role\", \"variant\"]);\n\n  return /*#__PURE__*/React.createElement(Component, _extends({\n    className: clsx(classes.root, className, variant !== 'fullWidth' && classes[variant], absolute && classes.absolute, flexItem && classes.flexItem, light && classes.light, orientation === 'vertical' && classes.vertical),\n    role: role,\n    ref: ref\n  }, other));\n});\nprocess.env.NODE_ENV !== \"production\" ? Divider.propTypes = {\n  // ----------------------------- Warning --------------------------------\n  // | These PropTypes are generated from the TypeScript type definitions |\n  // |     To update them edit the d.ts file and run \"yarn proptypes\"     |\n  // ----------------------------------------------------------------------\n\n  /**\n   * Absolutely position the element.\n   */\n  absolute: PropTypes.bool,\n\n  /**\n   * @ignore\n   */\n  children: PropTypes.node,\n\n  /**\n   * Override or extend the styles applied to the component.\n   * See [CSS API](#css) below for more details.\n   */\n  classes: PropTypes.object,\n\n  /**\n   * @ignore\n   */\n  className: PropTypes.string,\n\n  /**\n   * The component used for the root node.\n   * Either a string to use a HTML element or a component.\n   */\n  component: PropTypes\n  /* @typescript-to-proptypes-ignore */\n  .elementType,\n\n  /**\n   * If `true`, a vertical divider will have the correct height when used in flex container.\n   * (By default, a vertical divider will have a calculated height of `0px` if it is the child of a flex container.)\n   */\n  flexItem: PropTypes.bool,\n\n  /**\n   * If `true`, the divider will have a lighter color.\n   */\n  light: PropTypes.bool,\n\n  /**\n   * The divider orientation.\n   */\n  orientation: PropTypes.oneOf(['horizontal', 'vertical']),\n\n  /**\n   * @ignore\n   */\n  role: PropTypes.string,\n\n  /**\n   * The variant to use.\n   */\n  variant: PropTypes.oneOf(['fullWidth', 'inset', 'middle'])\n} : void 0;\nexport default withStyles(styles, {\n  name: 'MuiDivider'\n})(Divider);","// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"styles_container__1JRtE\",\"input\":\"styles_input__3C0qU\",\"saveIcon\":\"styles_saveIcon__3_m1f\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"group\":\"styles_group__3o0H3\",\"header\":\"styles_header__3G2al\",\"link\":\"styles_link__zDI_Y\",\"symbolContainer\":\"styles_symbolContainer__qA3K3\",\"symbol\":\"styles_symbol__93nPR\",\"description\":\"styles_description__3DUH6\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"header\":\"styles_header__2IZBv\"};"],"sourceRoot":""}