{"version":3,"sources":["modules/lazy.tsx","components/ModalTemplate/styles.module.scss","api/axios.ts","utils/session.ts","binanceTypes.ts","components/Text/styles.module.scss","components/Label/styles.module.scss","modules/BinanceOrder/styles.module.scss","modules/Reminder/modules/Item/styles.module.scss","modules/Reminder/modules/Form/styles.module.scss","modules/Login/styles.module.scss","components/Loader/styles.module.scss","components/ScreenLoader/styles.module.scss","components/Modal/styles.module.scss","modules/Note/styles.module.scss","modules/ModalLoader/styles.module.scss","components/SearchSymbolInput/SearchSymbolInput.tsx","api/apollo.ts","form/Input/styles.module.scss","components/ErrorModal/styles.module.scss","modules/Reminder/styles.module.scss","constants.ts","form/Autocomplete/Autocomplete.tsx","form/Input/Input.tsx","components/Loader/Loader.tsx","components/ScreenLoader/ScreenLoader.tsx","components/Label/Label.tsx","components/ModalTemplate/ModalTemplate.tsx","components/Modal/Modal.tsx","components/ErrorModal/ErrorModal.tsx","gqls.ts","redux/reducers/app/index.ts","redux/reducers/user/index.ts","redux/reducers/modal/index.ts","redux/reducers/modalLoader/index.ts","redux/index.ts","locales.ts","contexts.tsx","redux/sagas.ts","modules/Note/Note.tsx","modules/Login/Login.tsx","modules/LoginDone/LoginDone.tsx","Router.tsx","modules/BinanceOrder/BinanceOrder.tsx","modules/Reminder/modules/Item/Item.tsx","modules/Reminder/modules/Form/Form.tsx","modules/Reminder/Reminder.tsx","modules/Order/modules/Info/Info.tsx","modules/Order/modules/SymbolList/SymbolList.tsx","modules/Order/modules/BinanceFixedTrailingStop/BinanceFixedTrailingStop.tsx","modules/Order/modules/BinanceMovingBuy/BinanceMovingBuy.tsx","hooks/index.ts","modules/Order/modules/BinanceDirectBuy/BinanceDirectBuy.tsx","modules/Order/modules/BinanceDirectSell/BinanceDirectSell.tsx","modules/Order/Order.tsx","modules/CentralModal/CentralModal.tsx","modules/ModalLoader/ModalLoader.tsx","index.tsx","utils/mix.ts","components/SearchSymbolInput/styles.module.scss","modules/Order/styles.module.scss","utils/icons.ts"],"names":["appLazyPreload","Promise","resolve","reject","then","response","default","App","error","AppLazy","React","lazy","BinanceLazy","BinancePortfolio","OrdersLazy","Orders","DashboardLazy","Dashboard","chartGroupViewPreload","ChartGroupView","ChartGroupViewLazy","ChartGroupsLazy","ChartGroups","module","exports","axiosInstance","axios","create","baseURL","API_PREFIX","timeout","headers","interceptors","request","use","accessToken","window","sessionStorage","getItem","Authorization","timerRef","refreshSession","refreshToken","post","REFRESH_AUTH_ENDPOINT","setItem","data","accessTokenExpiration","toString","status","console","log","Error","getDelay","parseInt","Date","now","restartSessionTimer","clearTimeout","delay","setTimeout","store","dispatch","actions","user","setAuthorized","logout","get","LOGOUT_ENDPOINT","removeItem","location","reload","OrderType","Side","PriceType","QuantityType","SearchSymbolInput","save","white","useLazyQuery","SYMBOL_LIST_QUERY","getSymbols","loading","useState","symbols","setSymbols","form","useForm","useEffect","findSymbols","selectSymbol","useCallback","symbolObj","reset","symbol","onBlur","onChange","event","target","value","length","variables","search","className","styles","container","name","placeholder","classnames","symbolInput","show","listStaticContainer","listFloatingContainer","map","listItem","onClick","displaySymbol","description","type","websocketLink","WebSocketLink","uri","host","GRAPHQL_ENDPOINT","options","reconnect","apolloClient","ApolloClient","cache","InMemoryCache","link","credentials","ROUTES","ModalPriority","ModalRoutes","OrderDialogType","LOGIN_ENDPOINT","Autocomplete","list","control","render","field","controlOnBlur","ref","controlOnChange","getOptionLabel","item","text","getOptionSelected","val","renderOption","renderInput","params","TextField","size","find","Input","rest","classNames","input","e","defaultValue","Loader","Box","p","HourglassEmpty","icon","style","color","grey","ScreenLoader","Label","children","sizeOne","sizeTwo","FormLabel","ModalTemplate","header","onClose","modalId","close","dispatchers","modal","margin","Paper","paper","pl","pt","IconButton","body","pr","pb","Modal","open","contentWrapper","ErrorModal","stringError","setStringError","undefined","trim","JSON","stringify","textarea","GET_DASHBOARD","gql","LAST_PRICE_SUBSCRIPTION","BINANCE_LAST_PRICE_SUBSCRIPTION","BINANCE_BALANCE_UPDATE_SUBSCRIPTION","BINANCE_ORDER_UPDATE_SUBSCRIPTION","BINANCE_OCO_ORDER_UPDATE_SUBSCRIPTION","GET_DAILY_CHANGE_INDICATOR","GET_QUOTE","SAVE_SYMBOL_TO_DASHBOARD","CHANGE_SYMBOL_WATCHLIST","CHANGE_WATCHLIST_SETTINGS","GET_PRICES","GET_CHART_GROUPS","GET_CHART_GROUP","CREATE_CHART_GROUP","REMOVE_CHART_GROUP","ADD_CHART_TO_CHART_GROUP","REMOVE_CHART_FROM_CHART_GROUP","REMOVE_SYMBOL_FROM_DASHBOARD","GET_NOTE","SAVE_NOTE","GET_PRICE_ALERTS","SET_PRICE_ALERT","REMOVE_PRICE_ALERT","GET_REMINDERS","SET_REMINDER","REMOVE_REMINDER","GET_BINANCE_ACCOUNT_INFORMATION","SET_BINANCE_SELL_ORDER","SET_BINANCE_BUY_ORDER","GET_BINANCE_TRADES","GET_BINANCE_EXCHANGE_INFORMATION","GET_BINANCE_ORDERS","CANCEL_BINANCE_ORDER","SET_TRAILING_STOP_ORDER","SET_MOVING_BUY_ORDER","GET_ORDERS","CANCEL_ORDER","app","createSlice","initialState","appReady","showNotes","reducers","setAppReady","state","toggleShowNotes","authorized","payload","id","props","priority","Normal","modalLoader","ids","prepare","reducer","push","filter","sagaMiddleware","createSagaMiddleware","configureStore","middleware","getDefaultMiddleware","tmpDispatchers","tmpActions","Object","keys","forEach","key","dispatcherName","action","useTypedSelector","useReduxSelector","message","episodes","favourites","selectedSymbols","disp","storeContext","addSymbol","StoreContext","createContext","StoreProvider","useReducer","Provider","index","dictionary","cs","en","messages","carList","title","enhanceMessages","path","actualObject","fullPath","i","defineProperty","rootSaga","put","saveTimoutRef","Login","checking","setChecking","messageReceived","removeEventListener","loginWithGoogle","addEventListener","focus","bgcolor","m","elevation","Typography","variant","Button","LoginDone","opener","parse","postMessage","Router","selectedState","routes","useMemo","AuthFail","component","exact","to","fallback","AuthSuccess","BinanceOrder","columns","formColumn","mt","chartColumn","Item","useMutation","fetchPolicy","refetchQueries","query","mb","content","timestamp","day","month","year","Form","saveReminder","values","getValues","getTime","formWrapper","firstRow","mr","autoFocus","secondRow","Reminder","showAddForm","setShowAddForm","getRemindersResponse","useQuery","reminders","getReminders","reminder","_id","toggleShowAddForm","addReminderIconWrapper","Tooltip","ml","Note","textareaRef","useRef","loaded","setLoaded","getNoteResponse","saveNote","getText","current","currentObject","escapeListener","onKeyUp","getNote","textareaWrapper","disabled","borderColor","Info","assetAmount","busdAmount","lastPrice","ask","Number","NaN","currency","maximumFractionDigits","middle","bid","diffPercentage","free","locked","SymbolList","balances","exchangeInformationResponse","notifyOnNetworkStatusChange","exchangeMap","exchangeArray","getBinanceExchangeInformation","Array","isArray","symbolList","balance","asset","sort","a","b","localeCompare","BinanceFixedTrailingStop","predefinedSymbol","setSymbol","defaultValues","activateOnPrice","sellOnPrice","priceType","Market","quantityType","All","setTrailingStopOrder","parseNumber","quantity","quoteOrderQty","table","RadioGroup","FormControlLabel","Radio","label","Price","Quantity","QuoteOrderQty","BinanceMovingBuy","Math","random","setId","showLoader","hideLoader","loaderId","useModalLoader","percent","formQuantity","watch","setOrder","InputProps","endAdornment","InputAdornment","position","Middle","FormControl","parseFloat","BinanceDirectBuy","setBinanceSellOrder","price","symb","numericPrice","isNaN","BinanceDirectSell","Order","orderDialogType","replace","setAsset","accountInformationResponse","lastPriceResponse","useSubscription","setSymbolWrapper","smb","blcs","getBinanceAccountInformation","result","left","binanceLastPrice","right","CentralModal","modalMap","modalArray","setModalArray","openedModals","Set","array","entries","config","add","closedArray","has","Component","getComponent","ModalLoader","visible","run","theme","createMuiTheme","palette","primary","main","blue","overrides","ReactDOM","client","locale","defaultLocale","ThemeProvider","document","getElementById","round","digits","toFixed","stringPrice"],"mappings":"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","file":"static/js/main.3f8100e9.chunk.js","sourcesContent":["import React from 'react'\n\nexport const appLazyPreload = (): Promise<any> =>\n  new Promise((resolve, reject) => {\n    return import(/* webpackChunkName: \"App\" */ './App/App').then(\n      (response: any) => resolve({ default: response.App }),\n      (error) => reject(error)\n    )\n  })\n\nexport const AppLazy = React.lazy(appLazyPreload)\n\nexport const BinanceLazy = React.lazy(\n  (): Promise<any> =>\n    new Promise((resolve, reject) => {\n      return import(/* webpackChunkName: \"BinancePortfolio\" */ './BinancePortfolio/BinancePortfolio').then(\n        (response: any) => resolve({ default: response.BinancePortfolio }),\n        (error) => reject(error)\n      )\n    })\n)\n\nexport const OrdersLazy = React.lazy(\n  (): Promise<any> =>\n    new Promise((resolve, reject) => {\n      return import(/* webpackChunkName: \"Orders\" */ './Orders/Orders').then(\n        (response: any) => resolve({ default: response.Orders }),\n        (error) => reject(error)\n      )\n    })\n)\n\nexport const DashboardLazy = React.lazy(\n  (): Promise<any> =>\n    new Promise((resolve, reject) => {\n      return import(/* webpackChunkName: \"Dashboard\" */ './Dashboard/Dashboard').then(\n        (response: any) => resolve({ default: response.Dashboard }),\n        (error) => reject(error)\n      )\n    })\n)\n\nexport const chartGroupViewPreload = (): Promise<any> =>\n  new Promise((resolve, reject) => {\n    return import(/* webpackChunkName: \"ChartGroupView\" */ './ChartGroupView/ChartGroupView').then(\n      (response: any) => resolve({ default: response.ChartGroupView }),\n      (error) => reject(error)\n    )\n  })\n\nexport const ChartGroupViewLazy = React.lazy(chartGroupViewPreload)\n\nexport const ChartGroupsLazy = React.lazy(\n  (): Promise<any> =>\n    new Promise((resolve, reject) => {\n      return import(/* webpackChunkName: \"ChartGroups\" */ './ChartGroups/ChartGroups').then(\n        (response: any) => resolve({ default: response.ChartGroups }),\n        (error) => reject(error)\n      )\n    })\n)\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"margin\":\"styles_margin__2ETsU\",\"paper\":\"styles_paper__2R4J8\",\"header\":\"styles_header__2OaG0\",\"body\":\"styles_body__4ehTl\"};","import axios from 'axios'\n\nimport { API_PREFIX } from '../constants'\n\nexport const axiosInstance = axios.create({\n  baseURL: API_PREFIX,\n  timeout: 10000,\n  headers: {}\n})\n\naxiosInstance.interceptors.request.use((request) => {\n  const accessToken = window.sessionStorage.getItem('accessToken')\n\n  if (accessToken) {\n    request.headers.Authorization = `Bearer ${accessToken}`\n  }\n\n  return request\n})\n","import { AxiosError, AxiosResponse } from 'axios'\nimport { axiosInstance } from '../api/axios'\nimport { LOGOUT_ENDPOINT, REFRESH_AUTH_ENDPOINT } from '../constants'\nimport { store, actions } from '../redux'\n\nlet timerRef: ReturnType<typeof setTimeout>\n\ntype ResponseData = {\n  accessToken: string\n  accessTokenExpiration: number\n}\n\nexport const refreshSession = () =>\n  new Promise<void>((resolve, reject) => {\n    const refreshToken = window?.sessionStorage?.getItem('refreshToken')\n\n    if (refreshToken) {\n      axiosInstance\n        .post(REFRESH_AUTH_ENDPOINT, {\n          refreshToken\n        })\n        .then(\n          (response: AxiosResponse<ResponseData>) => {\n            window.sessionStorage.setItem('accessToken', response.data.accessToken)\n            window.sessionStorage.setItem('accessTokenExpiration', response.data.accessTokenExpiration.toString())\n            resolve()\n          },\n          (error: AxiosError) => {\n            if (error.response?.status === 401) {\n              // TODO - do it better\n              console.log('Unathorized')\n\n              return reject(new Error('UNAUTHORIZED'))\n            }\n\n            return reject(new Error('ERROR'))\n          }\n        )\n    } else {\n      reject()\n    }\n  })\n\nconst getDelay = () => {\n  const accessTokenExpiration = parseInt(window?.sessionStorage?.getItem('accessTokenExpiration') as string, 10)\n\n  return accessTokenExpiration - Date.now() - 5 * 60 * 1000\n}\n\nexport const restartSessionTimer = () => {\n  clearTimeout(timerRef)\n\n  let delay = getDelay()\n\n  console.log('Refresh session in ', delay / 1000 / 60, ' minutes')\n\n  timerRef = setTimeout(() => {\n    refreshSession().then(\n      () => {\n        delay = getDelay()\n        timerRef = setTimeout(restartSessionTimer, delay)\n      },\n      () => {\n        store.dispatch(actions.user.setAuthorized(false))\n      }\n    )\n  }, delay)\n}\n\nexport const stopSessionTimer = () => clearTimeout(timerRef)\n\nconst clearStorage = () => {\n  window.sessionStorage.removeItem('accessToken')\n  window.sessionStorage.removeItem('refreshToken')\n  window.sessionStorage.removeItem('accessTokenExpiration')\n}\n\nexport const logout = () => {\n  axiosInstance.get(LOGOUT_ENDPOINT)\n\n  clearStorage()\n\n  //  window.location.href = '/'\n\n  window.location.reload()\n}\n","export enum OrderType {\n  LIMIT = 'LIMIT',\n  MARKET = 'MARKET',\n  STOP_LOSS = 'STOP_LOSS',\n  STOP_LOSS_LIMIT = 'STOP_LOSS_LIMIT',\n  TAKE_PROFIT = 'TAKE_PROFIT',\n  TAKE_PROFIT_LIMIT = 'TAKE_PROFIT_LIMIT',\n  LIMIT_MAKER = 'LIMIT_MAKER'\n}\n\nexport enum Side {\n  SELL = 'SELL',\n  BUY = 'BUY'\n}\n\nexport enum PriceType {\n  Market = 'Market',\n  Middle = 'Middle',\n  Price = 'Price'\n}\n\nexport enum QuantityType {\n  All = 'All',\n  QuoteOrderQty = 'QuoteOrderQty', // Amount of USD the user want to buy/sell\n  Quantity = 'Quantity' // Amount of the base asset\n}\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"styles_container__3UKT1\",\"sizeOne\":\"styles_sizeOne__2fGfx\",\"sizeTwo\":\"styles_sizeTwo__1mfEd\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"styles_container__2wz3B\",\"sizeOne\":\"styles_sizeOne__2LMzU\",\"sizeTwo\":\"styles_sizeTwo__klLzJ\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"columns\":\"styles_columns__1Q83B\",\"formColumn\":\"styles_formColumn__1udZQ\",\"chartColumn\":\"styles_chartColumn__DZgTL\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"item\":\"styles_item__1OPPJ\",\"content\":\"styles_content__330pU\",\"rest\":\"styles_rest__3upgf\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"formWrapper\":\"styles_formWrapper__19-OP\",\"firstRow\":\"styles_firstRow__CrkAA\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"styles_container__2ck67\",\"paper\":\"styles_paper__2CIfs\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"styles_container__3cvvO\",\"icon\":\"styles_icon__1BOfb\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"styles_container__2hUfi\",\"icon\":\"styles_icon__1Cyto\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"modal\":\"styles_modal__1oK77\",\"contentWrapper\":\"styles_contentWrapper__1LfjA\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"textareaWrapper\":\"styles_textareaWrapper__1f_lw\",\"textarea\":\"styles_textarea__2Iwka\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"styles_container__1f_JM\",\"visible\":\"styles_visible__1_yyI\"};","import React, { useCallback, useEffect, useState } from 'react'\nimport { useForm } from 'react-hook-form'\nimport classnames from 'classnames'\nimport { Autorenew as AutorenewIcon } from '@material-ui/icons'\nimport { useMutation, useLazyQuery, useQuery } from '@apollo/client'\nimport { Symbol as SymbolType } from '@sw/shared/src/graphql'\nimport { Input } from '../../form'\nimport styles from './styles.module.scss'\nimport { GET_DASHBOARD, SYMBOL_LIST_QUERY, SAVE_SYMBOL_TO_DASHBOARD } from '../../gqls'\n\ntype FormValues = {\n  symbol: string\n}\n\ntype Props = {\n  save: (symbol: string) => void\n  white?: boolean\n}\n\nexport const SearchSymbolInput = ({ save, white }: Props) => {\n  const [getSymbols, { data, loading, error }] = useLazyQuery<{ findSymbols: Array<SymbolType> }>(SYMBOL_LIST_QUERY)\n\n  const [symbols, setSymbols] = useState<Array<SymbolType>>([])\n\n  const form = useForm<FormValues>()\n\n  useEffect(() => {\n    if (!loading && !error && data && data.findSymbols) {\n      setSymbols(data.findSymbols)\n    }\n  }, [data, loading, error])\n\n  const selectSymbol = useCallback(\n    (symbolObj: SymbolType) => () => {\n      form.reset({\n        symbol: ''\n      })\n      setSymbols([])\n      save(symbolObj.symbol)\n    },\n    []\n  )\n\n  const onBlur = useCallback(() => {\n    setTimeout(() => {\n      form.reset({\n        symbol: ''\n      })\n      setSymbols([])\n    }, 300)\n  }, [form])\n\n  const onChange = useCallback(\n    (event) => {\n      if (event.target.value.toString().length > 1) {\n        setSymbols([])\n        getSymbols({\n          variables: {\n            search: event.target.value\n          }\n        })\n      } else {\n        setSymbols([])\n      }\n    },\n    [setSymbols]\n  )\n\n  const clearSymbols = useCallback(() => {\n    setSymbols([])\n  }, [setSymbols])\n\n  return (\n    <div className={styles.container}>\n      <form className={styles.form}>\n        <Input\n          form={form}\n          name=\"symbol\"\n          onBlur={onBlur}\n          onChange={onChange}\n          placeholder=\"Search symbol\"\n          className={classnames(styles.symbolInput, { [styles.white]: white })}\n        />\n        <div className={classnames(styles.loading, { [styles.show]: loading })}>\n          <AutorenewIcon />\n        </div>\n      </form>\n      <div className={styles.listStaticContainer}>\n        {symbols.length > 0 && (\n          <>\n            <div className={styles.listFloatingContainer}>\n              <table>\n                <tbody>\n                  {symbols?.map((symbolObj) => {\n                    return (\n                      <tr key={symbolObj.symbol} className={styles.listItem} onClick={selectSymbol(symbolObj)}>\n                        <td className={styles.symbol}>\n                          [<b>{symbolObj.displaySymbol}</b>]\n                        </td>\n                        <td className={styles.description}>{symbolObj.description}</td>\n                        <td className={styles.type}>{symbolObj.type}</td>\n                      </tr>\n                    )\n                  })}\n                </tbody>\n              </table>\n            </div>\n          </>\n        )}\n      </div>\n    </div>\n  )\n}\n","import { WebSocketLink } from '@apollo/client/link/ws'\nimport { ApolloClient, InMemoryCache, ApolloProvider } from '@apollo/client'\n\nimport { GRAPHQL_ENDPOINT } from '../constants'\n\nconst websocketLink = new WebSocketLink({\n  uri: `wss://${window.location.host}${GRAPHQL_ENDPOINT}`,\n  options: {\n    // onError: (error:any) => {\n    //   console.error(error)\n    //   return error\n    // },\n    reconnect: true,\n    lazy: true\n    // connectionParams: () => {\n    //   // debugger\n    //   const accessToken = window.sessionStorage.getItem('accessToken')\n    //\n    //   console.log('connectionParams: ', accessToken)\n    //\n    //   return {\n    //     headers: {\n    //       Authorization: accessToken ? `Bearer ${accessToken}` : \"\",\n    //       authToken: accessToken\n    //       // authorization: accessToken\n    //     }\n    //   }\n    // }\n  }\n})\n\nexport const apolloClient = new ApolloClient({\n  cache: new InMemoryCache(),\n  link: websocketLink,\n  credentials: 'include'\n})\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"input\":\"styles_input__1xvM0\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"textarea\":\"styles_textarea__-qoGN\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"addReminderIconWrapper\":\"styles_addReminderIconWrapper__ikwZ_\"};","export const API_PREFIX = '/api'\nexport const REFRESH_AUTH_ENDPOINT = '/auth/refresh'\nexport const LOGIN_ENDPOINT = '/auth/google/login'\nexport const LOGOUT_ENDPOINT = '/auth/logout'\n\nexport const GRAPHQL_ENDPOINT = '/api/graphql'\n\nexport enum ROUTES {\n  App = '/app',\n  BinancePortfolio = '/app/binance-portfolio',\n  Orders = '/app/orders',\n  Dashboard = '/app/dashboard',\n  ChartGroups = '/app/chartgroups',\n  ChartGroupView = '/chartgroup/:chartGroupId',\n  AuthFail = '/auth/fail',\n  AuthSuccess = '/auth/success'\n}\n\nexport enum ModalPriority {\n  Low,\n  Normal,\n  High,\n  Error\n}\n\nexport enum ModalRoutes {\n  Note,\n  Reminder,\n  BinanceOrder,\n  BinanceBuyOrder,\n  BinanceSellOrder,\n  BinanceTrailingStopOrder,\n  BinanceMovingBuyOrder,\n  Order\n}\n\nexport enum OrderDialogType {\n  BinanceDirectBuy,\n  BinanceDirectSell,\n  BinanceFixedTrailingStop,\n  BinanceMovingBuy\n}\n","import React from 'react'\nimport { TextField } from '@material-ui/core'\nimport AutocompleteComponent from '@material-ui/lab/Autocomplete'\nimport { Controller, UseFormReturn } from 'react-hook-form'\n\ntype ListItem = {\n  text: string\n  value: string | number\n}\n\ntype Props = {\n  name: string\n  form: UseFormReturn<any>\n  list: Array<ListItem>\n  onChange?: (value: string) => void\n}\n\nexport const Autocomplete = ({ form, name, list = [], onChange }: Props) => (\n  <Controller\n    control={form.control}\n    name={name || 'select'}\n    render={({ field: { onBlur: controlOnBlur, ref, onChange: controlOnChange, value } }) => {\n      return (\n        <AutocompleteComponent\n          ref={ref}\n          options={list}\n          getOptionLabel={(item: ListItem | undefined) => item?.text || ''}\n          getOptionSelected={(item: ListItem | undefined, val: ListItem | undefined) => item?.value === val?.value}\n          onChange={(event, item) => {\n            controlOnChange(item?.value)\n            if (onChange) {\n              onChange(item?.value.toString() || '')\n            }\n          }}\n          onBlur={() => {\n            controlOnBlur()\n          }}\n          renderOption={(item: ListItem) => item.text}\n          renderInput={(params: any) => {\n            return <TextField {...params} />\n          }}\n          size=\"small\"\n          value={list.find((item) => item.value === value) || null}\n        />\n      )\n    }}\n  />\n)\n","import React, { FC } from 'react'\nimport { TextField, TextFieldProps } from '@material-ui/core'\nimport { Controller, UseFormReturn } from 'react-hook-form'\nimport classNames from 'classnames'\n\nimport styles from './styles.module.scss'\n\ntype Props = TextFieldProps & {\n  form: UseFormReturn<any>\n  name: string\n  className?: string\n  type?: 'date' | 'datetime-local' | 'time' | 'text'\n}\n\nexport const Input: FC<Props> = ({ className, name, form, onBlur, onChange, type = 'text', ...rest }: Props) => (\n  <Controller\n    control={form.control}\n    name={name || 'input'}\n    render={({ field: { onBlur: controlOnBlur, ref, onChange: controlOnChange, value } }) => (\n      <TextField\n        {...rest}\n        name={name}\n        className={classNames(styles.input, className)}\n        type={type}\n        onBlur={(event: any) => {\n          controlOnBlur()\n          if (onBlur) {\n            onBlur(event)\n          }\n        }}\n        ref={ref}\n        onChange={(e) => {\n          controlOnChange(e.target.value)\n          if (onChange) {\n            onChange(e)\n          }\n        }}\n        value={value}\n      />\n    )}\n    defaultValue=\"\"\n  />\n)\n","import React from 'react'\nimport { Box } from '@material-ui/core'\nimport { HourglassEmpty as HourglassEmptyIcon } from '@material-ui/icons'\nimport { grey } from '@material-ui/core/colors'\nimport styles from './styles.module.scss'\n\nexport const Loader = () => {\n  return (\n    <Box className={styles.container} p={4}>\n      <HourglassEmptyIcon className={styles.icon} style={{ color: grey[400] }} />\n    </Box>\n  )\n}\n","import React from 'react'\nimport { HourglassEmpty as HourglassEmptyIcon } from '@material-ui/icons'\nimport { grey } from '@material-ui/core/colors'\nimport styles from './styles.module.scss'\n\nexport const ScreenLoader = () => {\n  return (\n    <div className={styles.container}>\n      <HourglassEmptyIcon className={styles.icon} style={{ color: grey[400] }} />\n    </div>\n  )\n}\n","import React from 'react'\nimport classNames from 'classnames'\nimport { FormLabel } from '@material-ui/core'\n\nimport styles from './styles.module.scss'\n\ntype Props = {\n  children: any\n  size?: 32 | 42\n}\n\nexport const Label = ({ children, size = 32 }: Props) => (\n  <div className={classNames(styles.container, { [styles.sizeOne]: size === 32, [styles.sizeTwo]: size === 42 })}>\n    <FormLabel>{children}</FormLabel>\n  </div>\n)\n","import React, { useCallback } from 'react'\nimport classNames from 'classnames'\nimport { Box, Paper, IconButton } from '@material-ui/core'\n\nimport { dispatchers } from '../../redux'\nimport { CloseIcon } from '../../utils/icons'\nimport styles from './styles.module.scss'\n\ntype Props = {\n  header?: any\n  onClose?: () => void\n  children: any\n  modalId: string\n}\n\nexport const ModalTemplate = ({ header = null, onClose = () => undefined, children, modalId }: Props) => {\n  const close = useCallback(() => {\n    if (modalId) {\n      dispatchers.modal.close(modalId)\n    }\n    if (onClose) {\n      onClose()\n    }\n  }, [modalId])\n\n  return (\n    <Box p={6} className={styles.margin}>\n      <Paper className={styles.paper}>\n        <div className={styles.header}>\n          <Box pl={3} pt={1}>\n            {header}\n          </Box>\n          <div>\n            <IconButton onClick={close}>\n              <CloseIcon />\n            </IconButton>\n          </div>\n        </div>\n\n        <Box className={styles.body} pr={3} pl={3} pt={3} pb={3}>\n          {children}\n        </Box>\n      </Paper>\n    </Box>\n  )\n}\n","import React from 'react'\nimport { Modal as ModalComponent } from '@material-ui/core'\n\nimport styles from './styles.module.scss'\n\ntype Props = {\n  open: boolean\n  children: any\n}\n\nexport const Modal = ({ open, children }: Props) => {\n  return (\n    <ModalComponent open={open} className={styles.modal}>\n      <div className={styles.contentWrapper}>{children}</div>\n    </ModalComponent>\n  )\n}\n","import React, { useCallback, useEffect, useState } from 'react'\n\nimport { Modal } from '../Modal/Modal'\nimport { ModalTemplate } from '../ModalTemplate/ModalTemplate'\n\nimport styles from './styles.module.scss'\n\ntype Props = {\n  error: any\n}\n\nexport const ErrorModal = ({ error }: Props) => {\n  const [stringError, setStringError] = useState<string>('')\n\n  const close = useCallback(() => {\n    setStringError('')\n  }, [])\n\n  useEffect(() => {\n    if (error !== undefined && error !== null) {\n      if (typeof error === 'string') {\n        if (error.trim().length) {\n          setStringError(error)\n        }\n      } else {\n        setStringError(JSON.stringify(error))\n      }\n    }\n  }, [error])\n\n  return stringError ? (\n    <Modal open={!!stringError}>\n      <ModalTemplate modalId=\"\" onClose={close} header=\"ERROR!\">\n        <textarea value={stringError} className={styles.textarea} />\n      </ModalTemplate>\n    </Modal>\n  ) : null\n}\n","import gql from 'graphql-tag'\n\nexport const GET_DASHBOARD = gql`\n  query {\n    getDashboard {\n      watchlists {\n        _id\n        name\n        hidden\n        symbols\n        symbolsData {\n          _id\n          description\n          displaySymbol\n          symbol\n          type\n        }\n      }\n    }\n  }\n`\n\nexport const LAST_PRICE_SUBSCRIPTION = gql`\n  subscription lastPriceSubscription($symbol: String!) {\n    lastPrice(symbol: $symbol) {\n      price\n      symbol\n      timestamp\n      volume\n    }\n  }\n`\n\nexport const BINANCE_LAST_PRICE_SUBSCRIPTION = gql`\n  subscription BinanceLastPriceSubscription($symbol: String!) {\n    binanceLastPrice(symbol: $symbol) {\n      ask\n      bid\n      diff\n      diffPercentage\n      middle\n      symbol\n      timestamp\n    }\n  }\n`\n\nexport const BINANCE_BALANCE_UPDATE_SUBSCRIPTION = gql`\n  subscription binanceBalanceUpdate {\n    binanceBalanceUpdate {\n      asset\n      clearTime\n      delta\n      eventTime\n    }\n  }\n`\n\nexport const BINANCE_ORDER_UPDATE_SUBSCRIPTION = gql`\n  subscription binanceOrderUpdate {\n    binanceOrderUpdate {\n      eventTime\n      orderId\n      side\n      symbol\n      transactionTime\n    }\n  }\n`\n\nexport const BINANCE_OCO_ORDER_UPDATE_SUBSCRIPTION = gql`\n  subscription binanceOcoOrderUpdate {\n    binanceOcoOrderUpdate {\n      eventTime\n      symbol\n      transactionTime\n    }\n  }\n`\n\nexport const GET_DAILY_CHANGE_INDICATOR = gql`\n  query GetDailyChangeIndicator($symbol: String!) {\n    getDailyChangeIndicator(symbol: $symbol) {\n      sum\n      days {\n        date\n        value\n      }\n    }\n  }\n`\nexport const GET_QUOTE = gql`\n  query GetQuote($symbol: String!) {\n    getQuote(symbol: $symbol) {\n      currentPrice\n      highPrice\n      lowPrice\n      openPrice\n      previousClose\n    }\n  }\n`\n\nexport const SYMBOL_LIST_QUERY = gql`\n  query FindSymbols($search: String!) {\n    findSymbols(filter: { search: $search }, sort: SYMBOL_ASC) {\n      description\n      symbol\n      displaySymbol\n      type\n    }\n  }\n`\n\nexport const SAVE_SYMBOL_TO_DASHBOARD = gql`\n  mutation SaveSymbolToDashboard($symbol: String!, $watchlist: String!) {\n    saveSymbolToDashboard(symbol: $symbol, watchlist: $watchlist)\n  }\n`\n\nexport const CHANGE_SYMBOL_WATCHLIST = gql`\n  mutation ChangeSymbolWatchlist($symbol: String!, $watchlist: String!, $add: Boolean!) {\n    changeSymbolWatchlist(symbol: $symbol, watchlist: $watchlist, add: $add)\n  }\n`\n\nexport const CREATE_WATCHLIST = gql`\n  mutation CreateSymbolFlag($watchlist: String!) {\n    createWatchlist(watchlist: $watchlist)\n  }\n`\n\nexport const CHANGE_WATCHLIST_SETTINGS = gql`\n  mutation ChangeWatchlistSettings($id: String!, $hidden: Boolean, $name: String) {\n    changeWatchlistSettings(id: $id, hidden: $hidden, name: $name)\n  }\n`\n\nexport const GET_PRICES = gql`\n  query($symbol: String!, $timestampFrom: Float, $timestampTo: Float, $range: String) {\n    getPrices(symbol: $symbol, timestampFrom: $timestampFrom, timestampTo: $timestampTo, range: $range) {\n      priceArray {\n        price\n        timestamp\n      }\n    }\n  }\n`\n\nexport const GET_CHART_GROUPS = gql`\n  query {\n    getChartGroups {\n      _id\n      name\n      charts {\n        symbol\n        symbolData {\n          description\n          displaySymbol\n          symbol\n        }\n      }\n    }\n  }\n`\n\nexport const GET_CHART_GROUP = gql`\n  query($chartGroupId: String!) {\n    getChartGroup(chartGroupId: $chartGroupId) {\n      _id\n      name\n      charts {\n        symbol\n      }\n    }\n  }\n`\n\nexport const CREATE_CHART_GROUP = gql`\n  mutation createChartGroup($name: String!) {\n    createChartGroup(name: $name) {\n      _id\n      name\n    }\n  }\n`\n\nexport const REMOVE_CHART_GROUP = gql`\n  mutation removeChartGroup($chartGroupId: String!) {\n    removeChartGroup(chartGroupId: $chartGroupId)\n  }\n`\n\nexport const ADD_CHART_TO_CHART_GROUP = gql`\n  mutation addChartToChartGroup($chartGroupId: String!, $symbol: String!, $order: Int!, $range: String!) {\n    addChartToChartGroup(chartGroupId: $chartGroupId, symbol: $symbol, order: $order, range: $range)\n  }\n`\nexport const REMOVE_CHART_FROM_CHART_GROUP = gql`\n  mutation removeChartFromChartGroup($chartGroupId: String!, $symbol: String!) {\n    removeChartFromChartGroup(chartGroupId: $chartGroupId, symbol: $symbol)\n  }\n`\nexport const REMOVE_SYMBOL_FROM_DASHBOARD = gql`\n  mutation removeSymbolFromDashboard($symbol: String!) {\n    removeSymbolFromDashboard(symbol: $symbol)\n  }\n`\n\nexport const GET_NOTE = gql`\n  query {\n    getNote {\n      text\n    }\n  }\n`\n\nexport const SAVE_NOTE = gql`\n  mutation($text: String!) {\n    saveNote(text: $text)\n  }\n`\n\nexport const GET_PRICE_ALERTS = gql`\n  query getPriceAlerts($symbol: String!) {\n    getPriceAlerts(symbol: $symbol) {\n      _id\n      symbol\n      targetPrice\n      actualPrice\n    }\n  }\n`\n\nexport const SET_PRICE_ALERT = gql`\n  mutation setPriceAlert($symbol: String!, $targetPrice: Float!) {\n    setPriceAlert(symbol: $symbol, targetPrice: $targetPrice)\n  }\n`\n\nexport const REMOVE_PRICE_ALERT = gql`\n  mutation setPriceAlert($id: String!) {\n    removePriceAlert(id: $id)\n  }\n`\n\nexport const GET_REMINDERS = gql`\n  query {\n    getReminders {\n      _id\n      title\n      text\n      timestamp\n    }\n  }\n`\n\nexport const SET_REMINDER = gql`\n  mutation setReminder($title: String!, $text: String!, $timestamp: Float!) {\n    setReminder(title: $title, text: $text, timestamp: $timestamp)\n  }\n`\n\nexport const REMOVE_REMINDER = gql`\n  mutation removeReminder($id: String!) {\n    removeReminder(id: $id)\n  }\n`\n\nexport const GET_BINANCE_ACCOUNT_INFORMATION = gql`\n  {\n    getBinanceAccountInformation {\n      accountType\n      balances {\n        asset\n        free\n        locked\n      }\n      buyerCommission\n      canDeposit\n      canTrade\n      canWithdraw\n      makerCommission\n      permissions\n      sellerCommission\n      takerCommission\n      updateTime\n    }\n  }\n`\n\n// export const GET_BINANCE_REPORT = gql`\n//   {\n//     getBinanceReport {\n//       actualPrice\n//       gain\n//       percentageGain\n//       price\n//       symbols {\n//         symbol\n//         actualPricePerShare\n//         amount\n//         pricePerShare\n//         realizedProfit\n//         unrealizedProfit\n//         price\n//         actualPrice\n//         unrealizedPercentageProfit\n//       }\n//     }\n//   }\n// `\nexport const SET_BINANCE_SELL_ORDER = gql`\n  query setBinanceSellOrder(\n    $symbol: String!\n    $priceType: String!\n    $price: Float!\n    $quantityType: String!\n    $quantity: Float!\n    $quoteOrderQty: Float!\n  ) {\n    setBinanceSellOrder(\n      symbol: $symbol\n      priceType: $priceType\n      price: $price\n      quantityType: $quantityType\n      quantity: $quantity\n      quoteOrderQty: $quoteOrderQty\n    )\n  }\n`\n\nexport const SET_BINANCE_BUY_ORDER = gql`\n  query setBinanceBuyOrder(\n    $symbol: String!\n    $priceType: String!\n    $price: Float!\n    $quantityType: String!\n    $quantity: Float!\n    $quoteOrderQty: Float!\n  ) {\n    setBinanceBuyOrder(\n      symbol: $symbol\n      priceType: $priceType\n      price: $price\n      quantityType: $quantityType\n      quantity: $quantity\n      quoteOrderQty: $quoteOrderQty\n    )\n  }\n`\n\nexport const GET_BINANCE_TRADES = gql`\n  query getBinanceTrades($symbol: String!) {\n    getBinanceTrades(symbol: $symbol) {\n      commission\n      commissionAsset\n      id\n      isBuyer\n      orderId\n      price\n      qty\n      quoteQty\n      symbol\n      time\n    }\n  }\n`\n\nexport const GET_BINANCE_EXCHANGE_INFORMATION = gql`\n  query getBinanceExchangeInformation {\n    getBinanceExchangeInformation {\n      baseAsset\n      filters\n      ocoAllowed\n      quoteAsset\n      symbol\n    }\n  }\n`\n\nexport const GET_BINANCE_ORDERS = gql`\n  query getBinanceOrders {\n    getBinanceOrders {\n      symbol\n      orderId\n      orderListId\n      clientOrderId\n      price\n      origQty\n      executedQty\n      cummulativeQuoteQty\n      status\n      timeInForce\n      type\n      side\n      stopPrice\n      time\n      updateTime\n      isWorking\n      origQuoteOrderQty\n    }\n  }\n`\n\nexport const CANCEL_BINANCE_ORDER = gql`\n  query cancelBinanceOrder($symbol: String!, $orderId: Int!, $origClientOrderId: String!) {\n    cancelBinanceOrder(symbol: $symbol, orderId: $orderId, origClientOrderId: $origClientOrderId) {\n      clientOrderId\n      cummulativeQuoteQty\n      executedQty\n      orderId\n      orderListId\n      origClientOrderId\n      origQty\n      price\n      side\n      status\n      symbol\n      timeInForce\n      type\n    }\n  }\n`\n\nexport const SET_TRAILING_STOP_ORDER = gql`\n  mutation setTrailingStopOrder(\n    $activateOnPrice: Float!\n    $sellOnPrice: Float!\n    $symbol: String!\n    $priceType: String!\n    $quantityType: String!\n    $quantity: Float!\n    $quoteOrderQty: Float!\n  ) {\n    setTrailingStopOrder(\n      symbol: $symbol\n      activateOnPrice: $activateOnPrice\n      sellOnPrice: $sellOnPrice\n      priceType: $priceType\n      quantityType: $quantityType\n      quantity: $quantity\n      quoteOrderQty: $quoteOrderQty\n    )\n  }\n`\n\nexport const SET_MOVING_BUY_ORDER = gql`\n  mutation setMovingBuyOrder(\n    $activateOnPrice: Float!\n    $percent: Float!\n    $symbol: String!\n    $priceType: String!\n    $quantityType: String!\n    $quantity: Float!\n    $quoteOrderQty: Float!\n  ) {\n    setMovingBuyOrder(\n      symbol: $symbol\n      activateOnPrice: $activateOnPrice\n      percent: $percent\n      priceType: $priceType\n      quantityType: $quantityType\n      quantity: $quantity\n      quoteOrderQty: $quoteOrderQty\n    )\n  }\n`\n\nexport const GET_ORDERS = gql`\n  query getOrders {\n    getOrders {\n      _id\n      fixedTrailingStop {\n        activateOnPrice\n        sellOnPrice\n        activatedTimestamp\n        priceType\n        quantity\n        quantityType\n        quoteOrderQty\n      }\n      movingBuy {\n        activateOnPrice\n        percent\n        priceType\n        quantity\n        quantityType\n        quoteOrderQty\n      }\n      percentageTrailingStop {\n        activateOnPrice\n        percentageDecrease\n      }\n      type\n      createdAt\n      symbol\n      exchange\n    }\n  }\n`\n\nexport const CANCEL_ORDER = gql`\n  mutation cancelOrder($orderId: String!) {\n    cancelOrder(orderId: $orderId)\n  }\n`\n","import { createSlice, PayloadAction } from '@reduxjs/toolkit'\nimport { App } from '../../../types/redux/app'\n\nconst initialState: App = {\n  appReady: false,\n  showNotes: false\n}\n\nexport const app = createSlice({\n  initialState,\n  name: 'APP',\n  reducers: {\n    setAppReady: (state) => {\n      console.log('setAppReady')\n      state.appReady = true\n    },\n    toggleShowNotes: (state) => {\n      console.log('toggleShowNotes')\n      state.showNotes = !state.showNotes\n    }\n  }\n})\n","import { createSlice, PayloadAction } from '@reduxjs/toolkit'\nimport { User } from '../../../types/redux/user'\n\nconst initialState: User = {\n  authorized: false\n}\n\nexport const user = createSlice({\n  initialState,\n  name: 'USER',\n  reducers: {\n    setAuthorized: (state, { payload }: PayloadAction<boolean>) => {\n      console.log('setAuthorized')\n      state.authorized = payload\n    }\n  }\n})\n","import { createSlice, PayloadAction } from '@reduxjs/toolkit'\n\nimport { ModalPriority, ModalRoutes } from '../../../constants'\nimport { Modal } from '../../../types/redux/modal'\n\nconst initialState: Modal = {\n  map: {}\n}\n\nexport const modal = createSlice({\n  initialState,\n  name: 'MODAL',\n  reducers: {\n    open: (state, { payload }: PayloadAction<{ name: ModalRoutes; props?: Record<string, any> }>) => {\n      const modalId = `MODAL_${Date.now()}`\n      state.map[modalId] = {\n        id: modalId,\n        name: payload.name,\n        props: payload.props || {},\n        priority: ModalPriority.Normal\n      }\n    },\n    close: (state, { payload }: PayloadAction<string>) => {\n      const modalId = payload\n      delete state.map[modalId]\n    }\n  }\n})\n","import { createSlice, PayloadAction } from '@reduxjs/toolkit'\nimport { ModalLoader } from '../../../types/redux/modalLoader'\n\nconst initialState: ModalLoader = {\n  ids: []\n}\n\nexport const modalLoader = createSlice({\n  initialState,\n  name: 'MODAL_LOADER',\n  reducers: {\n    show: {\n      prepare: (id: string | undefined) => {\n        return {\n          payload: {\n            id: id || Date.now().toString()\n          }\n        }\n      },\n      reducer: (state, { payload }: PayloadAction<{ id: string }>) => {\n        if (!state.ids.find((item) => item === payload.id)) {\n          state.ids.push(payload.id)\n        }\n      }\n    },\n    close: (state, { payload }: PayloadAction<string>) => {\n      state.ids = state.ids.filter((id) => id !== payload)\n    }\n  }\n})\n","import { configureStore, getDefaultMiddleware } from '@reduxjs/toolkit'\nimport createSagaMiddleware from 'redux-saga'\nimport { useSelector as useReduxSelector, TypedUseSelectorHook } from 'react-redux'\n\nimport { app } from './reducers/app'\nimport { user } from './reducers/user'\nimport { modal } from './reducers/modal'\nimport { modalLoader } from './reducers/modalLoader'\n\nexport const sagaMiddleware = createSagaMiddleware()\n\nexport const store = configureStore({\n  middleware: [...getDefaultMiddleware(), sagaMiddleware] as const,\n  reducer: {\n    app: app.reducer,\n    user: user.reducer,\n    modal: modal.reducer,\n    modalLoader: modalLoader.reducer\n  }\n})\n\nexport const actions = {\n  app: app.actions,\n  user: user.actions,\n  modal: modal.actions,\n  modalLoader: modalLoader.actions\n}\n\n// export const dispatchers: typeof actions & {[x:string]: any} = {...actions}\n\nconst tmpDispatchers: any = {}\nconst tmpActions: any = actions\nObject.keys(tmpActions).forEach((key) => {\n  tmpDispatchers[key] = {}\n\n  Object.keys(tmpActions[key]).forEach((dispatcherName: string) => {\n    const action = tmpActions[key][dispatcherName]\n    tmpDispatchers[key][dispatcherName] = (...params: any) => {\n      return store.dispatch(action(...params))\n    }\n  })\n})\n\nexport const dispatchers: typeof actions = tmpDispatchers\n\nexport type ReduxState = ReturnType<typeof store.getState>\n\nexport const useTypedSelector: TypedUseSelectorHook<ReduxState> = useReduxSelector\n","import get from 'lodash/get'\n\ntype Message = {\n  cs: string\n  en: string\n  [x: string]: string\n}\n\nlet index = 0\nconst map: Record<string, Message> = {}\nconst t = (message: Message): string => {\n  index += 1\n  map[index] = message\n\n  return `${index}`\n}\n\nexport const dictionary: Record<string, Record<string, string>> = {\n  cs: {},\n  en: {}\n}\n\nexport const messages = {\n  carList: {\n    title: t({\n      cs: 'Seznam vozů',\n      en: 'Car list'\n    })\n  }\n}\n\nconst enhanceMessages = (path: string) => {\n  const actualObject = path ? get(messages, path) : messages\n  const keys = Object.keys(actualObject)\n\n  keys.forEach((key: string) => {\n    const fullPath: string = path ? `${path}.${key}` : key\n\n    if (typeof actualObject[key] === 'object') {\n      enhanceMessages(fullPath)\n    } else if (typeof actualObject[key] === 'string') {\n      const i: string = actualObject[key]\n      const message: Message = map[i]\n\n      dictionary.cs[fullPath] = message.cs\n      dictionary.en[fullPath] = message.en\n\n      Object.defineProperty(actualObject, key, {\n        get: () => fullPath\n      })\n    }\n  })\n}\n\nenhanceMessages('')\n","import React from 'react'\n\n// export const storeContext = {\n//     selectedSymbols: ['AAPL', 'BINANCE:BTCUSDC'],\n//     addSymbol: (symbol: string) => {\n//\n//     }\n// }\n\nexport type Action = {\n  type: string\n  payload: any\n}\n\nconst initialState = {\n  episodes: [],\n  favourites: [],\n  selectedSymbols: ['AAPL', 'BINANCE:BTCUSDC']\n}\n\nlet disp = (action: Action) => {}\n\nconst storeContext = {\n  state: initialState,\n  dispatch: {\n    addSymbol: (symbol: string) =>\n      disp({\n        type: 'ADD_SYMBOL',\n        payload: symbol\n      })\n  }\n}\n\nexport const StoreContext = React.createContext(storeContext)\n\n//\n// const initialState = {\n//     selectedSymbols: ['AAPL', 'BINANCE:BTCUSDC'],\n// }\n\nconst reducer = (state: any, action: Action) => {\n  // switch (action.type) {\n  //     case 'SET_VISIBILITY_FILTER':\n  //         return action.payload;\n  //     default:\n  //         return state;\n  // }\n  switch (action.type) {\n    case 'FETCH_DATA':\n      return { ...state, episodes: action.payload }\n    case 'ADD_SYMBOL':\n      return { ...state, selectedSymbols: [...state.selectedSymbols, action.payload] }\n      break\n    default:\n      return state\n  }\n}\n\nexport const StoreProvider = ({ children }: { children: any }) => {\n  const [state, dispatch] = React.useReducer(reducer, initialState)\n\n  disp = dispatch\n\n  const value = {\n    ...storeContext,\n    state\n  }\n\n  return <StoreContext.Provider value={value}>{children}</StoreContext.Provider>\n}\n","import { all, call, cancel, fork, put, select, take, takeLatest } from 'redux-saga/effects'\nimport { actions, sagaMiddleware } from './index'\n\nconst sagas = {}\n\n// TODO - add error handler\n// export function* prepareSagas(): Generator {\n//   const watch = (action: Record<string, any>, saga: any) => takeLatest(action.toString(), saga)\n\n// const sagasToInit = [\n// [actions.user.setDashboardSelectedSymbols, sagas.user.setDashboardSelectedSymbols],\n// [actions.user.getDashboard, sagas.user.getDashboard]\n// ]\n// yield all(sagasToInit.map(([action, saga, api]) => watch(action, saga)))\n// }\n\nexport function* rootSaga() {\n  console.log('rootSaga')\n  // yield fork(prepareSagas)\n\n  // yield call(sagas.user.setDashboardSelectedSymbols)\n  // yield call(sagas.user.getDashboard)\n\n  yield put(actions.app.setAppReady())\n}\n\nexport const initSagas = () => sagaMiddleware.run(rootSaga)\n","import React, { useCallback, useEffect, useRef, useState } from 'react'\nimport { Box } from '@material-ui/core'\nimport { grey } from '@material-ui/core/colors'\nimport { useMutation, useQuery } from '@apollo/client'\nimport { Note as NoteType } from '@sw/shared/src/graphql'\n\nimport { dispatchers } from '../../redux'\nimport styles from './styles.module.scss'\nimport { GET_NOTE, SAVE_NOTE } from '../../gqls'\nimport { ModalTemplate } from '../../components'\n\nlet saveTimoutRef: ReturnType<typeof setTimeout>\n\ntype Props = {\n  id: string\n}\n\n// TODO - add backuping content before editing\nexport const Note = ({ id: modalId }: Props) => {\n  const textareaRef = useRef(null)\n  const [loaded, setLoaded] = useState(false)\n\n  const getNoteResponse = useQuery<{ getNote: NoteType }>(GET_NOTE, { fetchPolicy: 'network-only' })\n  const [saveNote, saveNoteResponse] = useMutation(SAVE_NOTE, {\n    fetchPolicy: 'no-cache'\n  })\n\n  const getText = useCallback((): string | undefined => {\n    if (textareaRef?.current) {\n      const currentObject: any = textareaRef.current\n      const value = currentObject?.value\n      return value\n    }\n\n    return undefined\n  }, [textareaRef])\n\n  const save = useCallback(() => {\n    const text = getText()\n\n    if (loaded && text !== undefined) {\n      saveNote({\n        variables: {\n          text\n        }\n      })\n    }\n  }, [saveNote, getText, loaded])\n\n  const close = useCallback(() => {\n    save()\n    dispatchers.modal.close(modalId)\n  }, [dispatchers, textareaRef, loaded, saveNote, getText])\n\n  const escapeListener = useCallback(\n    (event) => {\n      if (event.key === 'Escape') {\n        close()\n      }\n    },\n    [getText, loaded]\n  )\n\n  useEffect(() => {\n    window.addEventListener('keyup', escapeListener)\n\n    return () => {\n      window.removeEventListener('keyup', escapeListener)\n    }\n  }, [loaded])\n\n  const onKeyUp = useCallback(\n    (event) => {\n      clearTimeout(saveTimoutRef)\n\n      if (event.key !== 'Escape') {\n        saveTimoutRef = setTimeout(save, 10 * 1000)\n      }\n    },\n    [textareaRef, loaded]\n  )\n\n  useEffect(() => {\n    if (!getNoteResponse.error && !getNoteResponse.loading && getNoteResponse.data?.getNote) {\n      if (textareaRef?.current) {\n        const currentObject: any = textareaRef.current\n\n        currentObject.value = getNoteResponse.data?.getNote?.text || ''\n      }\n      setLoaded(true)\n    }\n  }, [getNoteResponse])\n\n  return (\n    <ModalTemplate modalId={modalId}>\n      <Box pl={3} pr={3} pb={3} className={styles.textareaWrapper}>\n        <textarea\n          disabled={!loaded}\n          ref={textareaRef}\n          className={styles.textarea}\n          style={{ borderColor: grey[300] }}\n          placeholder=\"Your notes\"\n          onKeyUp={onKeyUp}\n        />\n      </Box>\n    </ModalTemplate>\n  )\n}\n","import React, { useCallback, useEffect, useState } from 'react'\nimport { Box, Paper, Button, Typography } from '@material-ui/core'\nimport { grey } from '@material-ui/core/colors'\n\nimport styles from './styles.module.scss'\nimport { appLazyPreload, chartGroupViewPreload } from '../lazy'\nimport { API_PREFIX, LOGIN_ENDPOINT } from '../../constants'\nimport { refreshSession, restartSessionTimer } from '../../utils/session'\nimport { ScreenLoader } from '../../components'\n\nlet windowReference: any\n\ntype Props = {\n  setAuthorized: (authorized: boolean) => void\n}\n\nexport const Login = ({ setAuthorized }: Props) => {\n  const [checking, setChecking] = useState(true)\n\n  useEffect(() => {\n    // Check the user is still logged-in\n    refreshSession().then(\n      () => {\n        setAuthorized(true)\n        restartSessionTimer()\n      },\n      () => {\n        setChecking(false)\n      }\n    )\n  }, [])\n\n  const messageReceived = useCallback(\n    (event) => {\n      if (event.data?.name === 'LOGIN_DONE') {\n        window.removeEventListener('message', messageReceived)\n\n        const accessToken = event.data?.accessToken\n        const refreshToken = event.data?.refreshToken\n        const accessTokenExpiration = event.data?.accessTokenExpiration\n\n        window.sessionStorage.setItem('accessToken', accessToken)\n        window.sessionStorage.setItem('refreshToken', refreshToken)\n        window.sessionStorage.setItem('accessTokenExpiration', accessTokenExpiration)\n\n        setAuthorized(true)\n        restartSessionTimer()\n      }\n    },\n    [setAuthorized]\n  )\n\n  const loginWithGoogle = useCallback(() => {\n    window.addEventListener('message', messageReceived, false)\n\n    windowReference = window.open(\n      `${API_PREFIX}${LOGIN_ENDPOINT}`,\n      'Google login',\n      'toolbar=no, menubar=no, width=600, height=700, top=100, left=100'\n    )\n    windowReference.focus()\n\n    appLazyPreload()\n    chartGroupViewPreload()\n\n    return () => {\n      window.removeEventListener('message', messageReceived)\n    }\n  }, [])\n\n  return (\n    <>\n      {checking && <ScreenLoader />}\n      <Box className={styles.container} bgcolor={grey}>\n        <Box m={2} p={3}>\n          <Paper elevation={3} className={styles.paper}>\n            <Box p={3}>\n              {!checking && (\n                <div>\n                  <Box p={3}>\n                    <Typography variant=\"h4\">Login</Typography>\n                  </Box>\n                  <Button onClick={loginWithGoogle}>Login with Google</Button>\n                </div>\n              )}\n            </Box>\n          </Paper>\n        </Box>\n      </Box>\n    </>\n  )\n}\n","import React, { useEffect } from 'react'\nimport { parse } from 'query-string'\nimport { Box } from '@material-ui/core'\n\nexport const LoginDone = () => {\n  useEffect(() => {\n    if (window.opener) {\n      const params = parse(window.location.search)\n\n      window.opener.postMessage({\n        name: 'LOGIN_DONE',\n        accessToken: params.accessToken,\n        refreshToken: params.refreshToken,\n        accessTokenExpiration: params.accessTokenExpiration\n      })\n    }\n    window.close()\n  }, [])\n\n  return <Box p={5}>Login successfull. Loding app....</Box>\n}\n","import React, { useMemo, Suspense } from 'react'\nimport { BrowserRouter, Switch, Route, Redirect } from 'react-router-dom'\n\nimport { AppLazy, ChartGroupViewLazy } from './modules/lazy'\nimport { Login } from './modules/Login/Login'\nimport { LoginDone } from './modules/LoginDone/LoginDone'\nimport { ROUTES } from './constants'\nimport { ScreenLoader } from './components'\nimport { dispatchers, useTypedSelector } from './redux'\n\nexport const Router = () => {\n  const selectedState = useTypedSelector((state) => state.user)\n\n  const routes = useMemo(() => {\n    if (selectedState.authorized) {\n      return (\n        <>\n          <Route path={ROUTES.AuthFail}>Login failed. Close this window and try it again.</Route>\n          <Route path={ROUTES.App} component={AppLazy} />\n          <Route path={ROUTES.ChartGroupView} component={ChartGroupViewLazy} />\n          <Route exact path=\"/\">\n            <Redirect to={ROUTES.Dashboard} />\n          </Route>\n        </>\n      )\n    }\n\n    return (\n      <Route path=\"/\">\n        <Login setAuthorized={dispatchers.user.setAuthorized} />\n      </Route>\n    )\n  }, [selectedState.authorized, dispatchers.user.setAuthorized])\n\n  return (\n    <BrowserRouter>\n      <Suspense fallback={<ScreenLoader />}>\n        <Switch>\n          <Route path={ROUTES.AuthSuccess} component={LoginDone} />\n          {routes}\n        </Switch>\n      </Suspense>\n    </BrowserRouter>\n  )\n}\n","import React, { useCallback } from 'react'\nimport { useForm } from 'react-hook-form'\nimport { Box, IconButton, Paper } from '@material-ui/core'\nimport { Input } from '../../form'\nimport { CloseIcon, SaveIcon } from '../../utils/icons'\nimport { ModalRoutes } from '../../constants'\nimport { dispatchers } from '../../redux'\n\nimport styles from './styles.module.scss'\nimport { ModalTemplate } from '../../components'\n\ntype FormValues = {\n  idealBuyPrice: string\n  buyPriceLimit: string\n  takeProfitPrice: string\n  trailingStopPrice: string\n  trailingStopPriceLimit: string\n  stopLossPrice: string\n}\n\ntype Props = {\n  id: string\n}\n\nexport const BinanceOrder = ({ id: modalId }: Props) => {\n  const form = useForm<FormValues>()\n\n  const save = useCallback(() => {}, [])\n\n  return (\n    <ModalTemplate modalId={modalId}>\n      <Box className={styles.columns}>\n        <Box className={styles.formColumn}>\n          <Box>\n            <Box>Od jaké ceny aktivovat sledování k automatické koupi?</Box>\n            <Box>\n              <Input form={form} name=\"idealBuyPrice\" />\n            </Box>\n          </Box>\n\n          <Box mt={2}>\n            <Box>\n              Okolo jaké ceny určitě koupit pro případ, že algoritmus nenajde lepší kupní cenu? (musí být vyšší než cena\n              předchozího bodu)\n            </Box>\n            <Box>\n              <Input form={form} name=\"buyPriceLimit\" />\n            </Box>\n          </Box>\n\n          <Box mt={2}>\n            <Box>Sebrání zisku (take-profit): Okolo jaké ceny bezpodmínečně prodat a vzít zisk?</Box>\n            <Box>\n              <Input form={form} name=\"takeProfitPrice\" />\n            </Box>\n          </Box>\n\n          <Box mt={2}>\n            <Box>\n              Od jaké ceny aktivovat sledování k automatickému prodeji se ziskem (trailing-stop) pro případ, že by cena\n              začala klesat?\n            </Box>\n            <Box>\n              <Input form={form} name=\"trailingStopPrice\" />\n            </Box>\n          </Box>\n\n          <Box mt={2}>\n            <Box>\n              Okolo jaké ceny prodat a vzít aktuální zisk (musí být nižší než cena předchozího bodu) v případě, že cena\n              začala klesat?\n            </Box>\n            <Box>\n              <Input form={form} name=\"trailingStopPriceLimit\" />\n            </Box>\n          </Box>\n\n          <Box mt={2}>\n            <Box>Minimalizace ztrát (stop-loss): Okolo jaké ceny prodat a neprodělat ještě víc?</Box>\n            <Box>\n              <Input form={form} name=\"stopLossPrice\" />\n            </Box>\n          </Box>\n        </Box>\n        <Box className={styles.chartColumn}>Chart</Box>\n      </Box>\n      <Box mt={4}>\n        <IconButton onClick={save}>\n          <SaveIcon color=\"primary\" />\n        </IconButton>\n      </Box>\n    </ModalTemplate>\n  )\n}\n","import React from 'react'\nimport { Paper, Box, IconButton, Button, Grid } from '@material-ui/core'\nimport { useSubscription, useMutation, useQuery } from '@apollo/client'\nimport { Reminder as ReminderType } from '@sw/shared/src/graphql'\nimport { FormattedDate, FormattedTime } from 'react-intl'\nimport { CloseIcon } from '../../../../utils/icons'\n\nimport { SET_REMINDER, GET_REMINDERS, REMOVE_REMINDER, GET_DASHBOARD } from '../../../../gqls'\n\nimport styles from './styles.module.scss'\n\ntype Props = {\n  data: ReminderType\n}\n\nexport const Item = ({ data }: Props) => {\n  const [removeReminder] = useMutation(REMOVE_REMINDER, {\n    fetchPolicy: 'no-cache',\n    refetchQueries: [\n      {\n        query: GET_REMINDERS\n      }\n    ]\n  })\n\n  return (\n    <Box className={styles.item} mb={2}>\n      <Box className={styles.content} pt={2} pl={2}>\n        <strong>{data.title}</strong> <span>{data.text}</span>\n      </Box>\n      <Box className={styles.rest}>\n        <div>\n          <FormattedDate value={new Date(data.timestamp)} day=\"2-digit\" month=\"2-digit\" year=\"numeric\" />{' '}\n          <FormattedTime value={new Date(data.timestamp)} />\n        </div>\n        <IconButton>\n          <CloseIcon />\n        </IconButton>\n      </Box>\n    </Box>\n  )\n}\n","import React, { useCallback, useState } from 'react'\nimport { useForm } from 'react-hook-form'\nimport { Box, IconButton } from '@material-ui/core'\nimport { useMutation } from '@apollo/client'\n\nimport { Input } from '../../../../form'\nimport { SaveIcon } from '../../../../utils/icons'\nimport styles from './styles.module.scss'\nimport { GET_REMINDERS, SET_REMINDER } from '../../../../gqls'\n\ntype FormValues = {\n  title: string\n  text: string\n  timestamp: string\n}\n\ntype Props = {\n  onClose?: () => void\n}\n\nexport const Form = ({ onClose }: Props) => {\n  const form = useForm<FormValues>()\n\n  const [saveReminder] = useMutation(SET_REMINDER, {\n    fetchPolicy: 'no-cache',\n    refetchQueries: [\n      {\n        query: GET_REMINDERS\n      }\n    ]\n  })\n\n  const save = useCallback(() => {\n    const values = form.getValues()\n\n    if (values.title || values.text) {\n      saveReminder({\n        variables: {\n          title: values.title,\n          text: values.text,\n          timestamp: new Date(values.timestamp).getTime()\n        }\n      })\n\n      form.reset()\n\n      if (onClose) {\n        onClose()\n      }\n    }\n  }, [form])\n\n  return (\n    <Box m={3} mt={1} pt={2} pb={2} pl={2} className={styles.formWrapper}>\n      <Box className={styles.firstRow}>\n        <Box mr={2}>\n          <Input form={form} name=\"title\" placeholder=\"Title\" autoFocus />\n        </Box>\n\n        <Box mr={0}>\n          <Input form={form} name=\"timestamp\" type=\"datetime-local\" />\n        </Box>\n        <Box>\n          <IconButton onClick={save}>\n            <SaveIcon color=\"primary\" />\n          </IconButton>\n        </Box>\n      </Box>\n\n      <Box className={styles.secondRow} mr={6} mt={2}>\n        <Input form={form} name=\"text\" placeholder=\"Text\" />\n      </Box>\n    </Box>\n  )\n}\n","import React, { useCallback, useMemo, useState } from 'react'\n\nimport { Paper, Box, IconButton, Tooltip } from '@material-ui/core'\nimport { useQuery } from '@apollo/client'\nimport { Reminder as ReminderType } from '@sw/shared/src/graphql'\n\nimport { CloseIcon, AddCircleOutlineIcon } from '../../utils/icons'\nimport { ModalRoutes } from '../../constants'\nimport { dispatchers } from '../../redux'\n\nimport { GET_REMINDERS } from '../../gqls'\nimport { Item } from './modules/Item/Item'\nimport { Form } from './modules/Form/Form'\n\nimport styles from './styles.module.scss'\nimport { ModalTemplate } from '../../components'\n\ntype Props = {\n  id: string\n}\n\nexport const Reminder = ({ id: modalId }: Props) => {\n  const [showAddForm, setShowAddForm] = useState(false)\n\n  const getRemindersResponse = useQuery<{ getReminders: Array<ReminderType> }>(GET_REMINDERS)\n\n  const reminders = useMemo(() => {\n    if (getRemindersResponse?.data?.getReminders) {\n      return getRemindersResponse?.data?.getReminders.map((reminder) => {\n        return <Item data={reminder} key={reminder._id} />\n      })\n    }\n\n    return null\n  }, [getRemindersResponse.data])\n\n  const toggleShowAddForm = useCallback(() => {\n    setShowAddForm(!showAddForm)\n  }, [showAddForm, setShowAddForm])\n\n  return (\n    <ModalTemplate modalId={modalId}>\n      {!showAddForm && (\n        <Box mr={3} mb={1} className={styles.addReminderIconWrapper}>\n          <Tooltip title=\"Add new reminder\">\n            <IconButton onClick={toggleShowAddForm}>\n              <AddCircleOutlineIcon color=\"primary\" />\n            </IconButton>\n          </Tooltip>\n        </Box>\n      )}\n      {showAddForm && <Form onClose={toggleShowAddForm} />}\n      <Box ml={3} mr={3} mb={3}>\n        {reminders}\n      </Box>\n    </ModalTemplate>\n  )\n}\n","import React, { useMemo } from 'react'\nimport classNames from 'classnames'\nimport { Box, Typography } from '@material-ui/core'\nimport { FormattedNumber } from 'react-intl'\nimport { BinanceAccountInformation, BinanceBalance, BinanceLastPrice } from '@sw/shared/src/graphql'\n\ntype Props = {\n  busdAmount: {\n    free: number\n    locked: number\n  }\n  lastPrice?: BinanceLastPrice\n  assetAmount: number\n}\n\nexport const Info = ({ assetAmount, busdAmount, lastPrice }: Props) => {\n  return (\n    <>\n      <Box>\n        <Typography color=\"textSecondary\" variant=\"h6\">\n          Symbol actual price\n        </Typography>\n        <Box pl={2}>\n          <Typography color=\"textSecondary\">\n            <Box>\n              Ask:{' '}\n              <FormattedNumber\n                value={lastPrice?.ask || Number.NaN}\n                style=\"currency\"\n                currency=\"USD\"\n                maximumFractionDigits={4}\n              />\n            </Box>\n            <Box>\n              Middle:{' '}\n              <FormattedNumber\n                value={lastPrice?.middle || Number.NaN}\n                style=\"currency\"\n                currency=\"USD\"\n                maximumFractionDigits={4}\n              />\n            </Box>\n            <Box>\n              Bid:{' '}\n              <FormattedNumber\n                value={lastPrice?.bid || Number.NaN}\n                style=\"currency\"\n                currency=\"USD\"\n                maximumFractionDigits={4}\n              />\n            </Box>\n            <Box>\n              Ask vs. Bid:{' '}\n              <FormattedNumber\n                value={(lastPrice?.diffPercentage || Number.NaN) / 100}\n                style=\"percent\"\n                currency=\"USD\"\n                maximumFractionDigits={2}\n              />\n            </Box>\n          </Typography>\n        </Box>\n      </Box>\n\n      <Box pt={2}>\n        <Typography color=\"textSecondary\" variant=\"h6\">\n          Your asset amount\n        </Typography>\n        <Box pl={2}>\n          <Typography color=\"textSecondary\">\n            <FormattedNumber value={assetAmount} />\n          </Typography>\n        </Box>\n      </Box>\n\n      <Box pt={2}>\n        <Typography color=\"textSecondary\" variant=\"h6\">\n          Your deposit\n        </Typography>\n        <Box pl={2}>\n          <Typography color=\"textSecondary\">\n            <Box>\n              Free: <FormattedNumber value={busdAmount.free} style=\"currency\" currency=\"USD\" />\n            </Box>\n            <Box>\n              Locked: <FormattedNumber value={busdAmount.locked} style=\"currency\" currency=\"USD\" />\n            </Box>\n            <Box>\n              Sum: <FormattedNumber value={busdAmount.free + busdAmount.locked} style=\"currency\" currency=\"USD\" />\n            </Box>\n          </Typography>\n        </Box>\n      </Box>\n    </>\n  )\n}\n","import React, { useMemo } from 'react'\nimport { UseFormReturn } from 'react-hook-form'\nimport { useQuery } from '@apollo/client'\nimport { BinanceBalance, BinanceExchangeInformation } from '@sw/shared/src/graphql'\n\nimport { Autocomplete } from '../../../../form'\nimport { GET_BINANCE_EXCHANGE_INFORMATION } from '../../../../gqls'\n\ntype Props = {\n  balances: Array<BinanceBalance>\n  form: UseFormReturn<any>\n  onChange?: (symbol: string) => void\n}\n\nexport const SymbolList = ({ balances, form, onChange = (value: string) => undefined }: Props) => {\n  const exchangeInformationResponse = useQuery<{ getBinanceExchangeInformation: BinanceExchangeInformation }>(\n    GET_BINANCE_EXCHANGE_INFORMATION,\n    {\n      notifyOnNetworkStatusChange: true\n    }\n  )\n\n  const exchangeMap = useMemo(() => {\n    const map: Record<string, BinanceExchangeInformation> = {}\n    const exchangeArray = exchangeInformationResponse?.data?.getBinanceExchangeInformation\n\n    if (Array.isArray(exchangeArray)) {\n      exchangeArray.forEach((item) => {\n        map[item.symbol] = item\n      })\n    }\n\n    return map\n  }, [exchangeInformationResponse?.data?.getBinanceExchangeInformation])\n\n  const symbolList = useMemo(() => {\n    if (Array.isArray(balances) && Object.keys(exchangeMap).length) {\n      return balances\n        .filter((balance) => !!exchangeMap[`${balance.asset}BUSD`])\n        .sort((a, b) => a.asset.localeCompare(b.asset))\n        .map((balance) => ({\n          text: `${balance.asset}BUSD`,\n          value: `${balance.asset}BUSD`\n        }))\n    }\n\n    return []\n  }, [balances, exchangeMap])\n\n  return <Autocomplete name=\"symbol\" form={form} list={symbolList} onChange={onChange} />\n}\n","import React, { useCallback, useEffect } from 'react'\nimport { Box, Button, Radio, RadioGroup, FormControlLabel, Typography } from '@material-ui/core'\nimport { Controller, useForm } from 'react-hook-form'\nimport { useMutation } from '@apollo/client'\nimport { BinanceBalance, BinanceLastPrice } from '@sw/shared/src/graphql'\n\nimport { round, parseNumber } from '../../../../utils/mix'\nimport { PriceType, QuantityType } from '../../../../binanceTypes'\nimport { Input } from '../../../../form'\nimport { SET_TRAILING_STOP_ORDER } from '../../../../gqls'\nimport { SymbolList } from '../SymbolList/SymbolList'\nimport styles from '../../styles.module.scss'\nimport { Label } from '../../../../components'\n\ntype Props = {\n  assetAmount: number\n  balances: Array<BinanceBalance>\n  symbol: string\n  setSymbol: (symbol: string) => void\n  lastPrice?: BinanceLastPrice\n}\n\ntype FormValues = {\n  activateOnPrice: string\n  sellOnPrice: string\n  symbol: string\n  priceType: PriceType\n  quantityType: QuantityType\n  quantity: string\n  quoteOrderQty: string\n}\n\nexport const BinanceFixedTrailingStop = ({\n  balances,\n  assetAmount,\n  lastPrice,\n  symbol: predefinedSymbol,\n  setSymbol\n}: Props) => {\n  const form = useForm<FormValues>({\n    defaultValues: {\n      symbol: predefinedSymbol,\n      activateOnPrice: '',\n      sellOnPrice: '',\n      priceType: PriceType.Market,\n      quantityType: QuantityType.All\n    }\n  })\n\n  const [setTrailingStopOrder, response] = useMutation<{ setTrailingStopOrder: string }>(SET_TRAILING_STOP_ORDER, {\n    fetchPolicy: 'no-cache'\n  })\n\n  const save = useCallback(() => {\n    const values = form.getValues()\n\n    const activateOnPrice = parseNumber(values.activateOnPrice)\n    const sellOnPrice = parseNumber(values.sellOnPrice)\n    const quantity = parseNumber(values.quantity)\n    const quoteOrderQty = parseNumber(values.quoteOrderQty)\n\n    if (!values.priceType) {\n      // TODO\n      console.log('Choose price type')\n    } else if (!activateOnPrice || activateOnPrice < 0) {\n      // TODO\n      console.log('Invalid Activate on price')\n    } else if (!sellOnPrice || sellOnPrice < 0) {\n      // TODO\n      console.log('Invalid Sell on Price')\n    } else {\n      setTrailingStopOrder({\n        variables: {\n          symbol: values.symbol,\n          activateOnPrice,\n          sellOnPrice,\n          priceType: values.priceType,\n          quantityType: values.quantityType,\n          quantity: quantity || -1,\n          quoteOrderQty: quoteOrderQty || -1\n        }\n      })\n    }\n  }, [form, setTrailingStopOrder])\n\n  console.log(response.error)\n\n  return (\n    <table className={styles.table}>\n      <tbody>\n        <tr>\n          <td>\n            <Label>Symbol:</Label>\n          </td>\n          <td>\n            <SymbolList form={form} balances={balances} onChange={setSymbol} />\n          </td>\n        </tr>\n        <tr>\n          <td>\n            <Label>Activate on Price:</Label>\n          </td>\n          <td>\n            <Input form={form} name=\"activateOnPrice\" />\n          </td>\n        </tr>\n        <tr>\n          <td>\n            <Label>Sell on Price:</Label>\n          </td>\n          <td>\n            <Input form={form} name=\"sellOnPrice\" />\n          </td>\n        </tr>\n        <tr>\n          <td>\n            <Label size={42}>Sell on:</Label>\n          </td>\n          <td>\n            <Controller\n              control={form.control}\n              name=\"priceType\"\n              render={({ field: { onBlur, ref, onChange, value } }) => (\n                <RadioGroup onChange={(event, val) => onChange(val)} value={value}>\n                  <Box>\n                    <FormControlLabel value={PriceType.Market} control={<Radio />} label=\"Market\" />\n                  </Box>\n                  <Box>\n                    <FormControlLabel value={PriceType.Price} control={<Radio />} label={'Same as \"Sell on Price\"'} />\n                  </Box>\n                </RadioGroup>\n              )}\n            />\n          </td>\n        </tr>\n        <tr>\n          <td>\n            <Label size={42}>Quantity:</Label>\n          </td>\n          <td>\n            <Controller\n              control={form.control}\n              name=\"quantityType\"\n              defaultValue={QuantityType.All}\n              render={({ field: { onBlur, ref, onChange, value } }) => (\n                <RadioGroup onChange={(event, val) => onChange(val)} value={value}>\n                  <Box>\n                    <FormControlLabel value={QuantityType.All} control={<Radio />} label=\"All\" />\n                    {assetAmount} ({assetAmount * (lastPrice?.middle || 0)} $)\n                  </Box>\n                  <Box>\n                    <FormControlLabel\n                      value={QuantityType.Quantity}\n                      control={<Radio />}\n                      label=\"Quantity of the base Asset\"\n                    />\n                    <Input form={form} name=\"quantity\" disabled={value !== QuantityType.Quantity} />\n                  </Box>\n                  <Box>\n                    <FormControlLabel\n                      value={QuantityType.QuoteOrderQty}\n                      control={<Radio />}\n                      label=\"Quantity of the BUSD to sell\"\n                    />\n                    <Input form={form} name=\"quoteOrderQty\" disabled={value !== QuantityType.QuoteOrderQty} />\n                  </Box>\n                </RadioGroup>\n              )}\n            />\n          </td>\n        </tr>\n        <tr>\n          <td />\n          <td>\n            <Button color=\"primary\" onClick={save} variant=\"contained\">\n              Place stop order\n            </Button>\n          </td>\n        </tr>\n      </tbody>\n    </table>\n  )\n}\n","import React, { useCallback, useEffect } from 'react'\nimport {\n  Box,\n  Button,\n  Radio,\n  RadioGroup,\n  FormControlLabel,\n  InputAdornment,\n  Typography,\n  FormControl\n} from '@material-ui/core'\nimport { Controller, useForm } from 'react-hook-form'\nimport { FormattedNumber } from 'react-intl'\nimport { BinanceBalance, BinanceLastPrice } from '@sw/shared/src/graphql'\nimport { useMutation } from '@apollo/client'\n\nimport { parseNumber } from '../../../../utils/mix'\nimport { ErrorModal, Label } from '../../../../components'\nimport { Input } from '../../../../form'\nimport { PriceType, QuantityType } from '../../../../binanceTypes'\nimport { useModalLoader } from '../../../../hooks'\nimport { SymbolList } from '../SymbolList/SymbolList'\nimport { GET_ORDERS, SET_MOVING_BUY_ORDER } from '../../../../gqls'\n\nimport styles from '../../styles.module.scss'\n\ntype Props = {\n  balances: Array<BinanceBalance>\n  symbol: string\n  setSymbol: (symbol: string) => void\n  busdAmount: {\n    free: number\n    locked: number\n  }\n  lastPrice?: BinanceLastPrice\n}\n\ntype FormValues = {\n  activateOnPrice: string\n  symbol: string\n  percent: number\n  priceType: PriceType\n  quantityType: QuantityType\n  quantity: string\n  quoteOrderQty: string\n}\n\nexport const BinanceMovingBuy = ({ balances, busdAmount, lastPrice, symbol: predefinedSymbol, setSymbol }: Props) => {\n  const { showLoader, hideLoader } = useModalLoader()\n\n  const form = useForm<FormValues>({\n    defaultValues: {\n      symbol: predefinedSymbol,\n      activateOnPrice: '',\n      priceType: PriceType.Market,\n      quantityType: QuantityType.QuoteOrderQty,\n      percent: 5\n    }\n  })\n\n  const formQuantity = form.watch('quantity')\n\n  const [setOrder, response] = useMutation<{ setMovingBuyOrder: string }>(SET_MOVING_BUY_ORDER, {\n    fetchPolicy: 'no-cache',\n    refetchQueries: [\n      {\n        query: GET_ORDERS\n      }\n    ]\n  })\n\n  const save = useCallback(() => {\n    const values = form.getValues()\n\n    const activateOnPrice = parseNumber(values.activateOnPrice)\n    const quantity = parseNumber(values.quantity)\n    const quoteOrderQty = parseNumber(values.quoteOrderQty)\n    const percent = parseNumber(values.percent)\n\n    if (!values.symbol) {\n      console.log('Choose symbol!')\n    } else if (!values.priceType) {\n      // TODO\n      console.log('Choose price type')\n    } else if (!activateOnPrice || activateOnPrice < 0) {\n      // TODO\n      console.log('Invalid Activate on price')\n    } else if (percent < 0 || percent > 10) {\n      console.log('Invalid Percent value')\n    } else {\n      showLoader()\n\n      setOrder({\n        variables: {\n          symbol: values.symbol,\n          activateOnPrice,\n          priceType: values.priceType,\n          quantityType: values.quantityType,\n          quantity: quantity || -1,\n          quoteOrderQty: quoteOrderQty || -1,\n          percent\n        }\n      })\n    }\n  }, [form, setOrder])\n\n  return (\n    <form>\n      <table className={styles.table}>\n        <tbody>\n          <tr>\n            <td>\n              <Label>Symbol:</Label>\n            </td>\n            <td>\n              <SymbolList form={form} balances={balances} onChange={setSymbol} />\n            </td>\n          </tr>\n\n          <tr>\n            <td>\n              <Label>Activate on price:</Label>\n            </td>\n            <td>\n              <Input form={form} name=\"activateOnPrice\" />\n            </td>\n          </tr>\n          <tr>\n            <td>\n              <Label>Percent:</Label>\n            </td>\n            <td>\n              <Input\n                form={form}\n                name=\"percent\"\n                InputProps={{\n                  endAdornment: (\n                    <InputAdornment position=\"end\">\n                      <Typography variant=\"caption\" color=\"textSecondary\">\n                        % (max. 10)\n                      </Typography>\n                    </InputAdornment>\n                  )\n                }}\n              />\n            </td>\n          </tr>\n\n          <tr>\n            <td>\n              <Label size={42}>Buy price type:</Label>\n            </td>\n            <td>\n              <Controller\n                control={form.control}\n                name=\"priceType\"\n                render={({ field: { onBlur, ref, onChange, value } }) => (\n                  <RadioGroup onChange={(event, val) => onChange(val)} value={value}>\n                    <Box>\n                      <FormControlLabel value={PriceType.Market} control={<Radio />} label=\"Market\" />\n                    </Box>\n                    <Box>\n                      <FormControlLabel value={PriceType.Middle} control={<Radio />} label=\"Middle\" />\n                    </Box>\n                  </RadioGroup>\n                )}\n              />\n            </td>\n          </tr>\n          <tr>\n            <td>\n              <Label size={42}>Quantity:</Label>\n            </td>\n            <td>\n              <Controller\n                control={form.control}\n                name=\"quantityType\"\n                defaultValue={QuantityType.All}\n                render={({ field: { onBlur, ref, onChange, value } }) => (\n                  <RadioGroup onChange={(event, val) => onChange(val)} value={value}>\n                    <Box>\n                      <FormControlLabel value={QuantityType.Quantity} control={<Radio />} label=\"Base asset shares\" />\n                      {value === QuantityType.Quantity && (\n                        <Box pl={4}>\n                          <FormControl>\n                            <Input\n                              form={form}\n                              name=\"quantity\"\n                              disabled={value !== QuantityType.Quantity}\n                              InputProps={{\n                                endAdornment: (\n                                  <InputAdornment position=\"end\">\n                                    <Typography variant=\"caption\" color=\"textSecondary\">\n                                      (~&nbsp;\n                                      <FormattedNumber\n                                        value={(parseFloat(formQuantity) || 0) * (lastPrice?.ask || 0)}\n                                        style=\"currency\"\n                                        currency=\"USD\"\n                                      />\n                                      )\n                                    </Typography>\n                                  </InputAdornment>\n                                )\n                              }}\n                            />\n                          </FormControl>\n                        </Box>\n                      )}\n                    </Box>\n                    <Box>\n                      <FormControlLabel\n                        value={QuantityType.QuoteOrderQty}\n                        control={<Radio />}\n                        label={\n                          <>\n                            <span>$ to spend</span>\n                            <Typography variant=\"caption\" color=\"textSecondary\">\n                              &nbsp;(\n                              <FormattedNumber value={busdAmount.free} style=\"currency\" currency=\"USD\" /> free)\n                            </Typography>\n                          </>\n                        }\n                      />\n                      {value === QuantityType.QuoteOrderQty && (\n                        <Box pl={4}>\n                          <Input\n                            form={form}\n                            name=\"quoteOrderQty\"\n                            disabled={value !== QuantityType.QuoteOrderQty}\n                            InputProps={{\n                              endAdornment: (\n                                <InputAdornment position=\"end\">\n                                  <Typography variant=\"caption\" color=\"textSecondary\">\n                                    $\n                                  </Typography>\n                                </InputAdornment>\n                              )\n                            }}\n                          />\n                        </Box>\n                      )}\n                    </Box>\n                  </RadioGroup>\n                )}\n              />\n            </td>\n          </tr>\n          <tr>\n            <td />\n            <td>\n              <Button color=\"primary\" onClick={save} variant=\"contained\">\n                Place buy order\n              </Button>\n            </td>\n          </tr>\n        </tbody>\n      </table>\n      <ErrorModal error={response.loading ? '' : response.error} />\n    </form>\n  )\n}\n","import { useCallback, useState } from 'react'\n\nimport { dispatchers } from '../redux'\n\nexport const useModalLoader = () => {\n  const [id, setId] = useState(`${Math.random()}_${Date.now()}`)\n\n  const showLoader = useCallback(() => {\n    dispatchers.modalLoader.show(id)\n  }, [id, setId])\n\n  const hideLoader = useCallback(() => {\n    dispatchers.modalLoader.close(id)\n  }, [id, setId])\n\n  return {\n    loaderId: id,\n    showLoader,\n    hideLoader\n  }\n}\n","import React, { useCallback, useEffect, useMemo, useState } from 'react'\nimport { Box, Button, Radio, RadioGroup, FormControlLabel, Paper, IconButton, MenuItem } from '@material-ui/core'\nimport { Controller, useForm } from 'react-hook-form'\nimport { useSubscription, useQuery, useMutation, useLazyQuery } from '@apollo/client'\nimport { BinanceBalance, BinanceLastPrice } from '@sw/shared/src/graphql'\n\nimport { PriceType, QuantityType } from '../../../../binanceTypes'\nimport { Input, Select, Autocomplete } from '../../../../form'\nimport { SET_BINANCE_BUY_ORDER } from '../../../../gqls'\nimport styles from '../../styles.module.scss'\nimport { round, parseNumber } from '../../../../utils/mix'\nimport { SymbolList } from '../SymbolList/SymbolList'\nimport { Label } from '../../../../components'\n\ntype Props = {\n  balances: Array<BinanceBalance>\n  symbol: string\n  setSymbol: (symbol: string) => void\n  lastPrice?: BinanceLastPrice\n}\n\ntype FormValues = {\n  priceType: PriceType\n  price: string\n  quantityType: QuantityType\n  quantity: string\n  quoteOrderQty: string\n  symbol: string\n}\n\nexport const BinanceDirectBuy = ({ balances, lastPrice, symbol: predefinedSymbol, setSymbol }: Props) => {\n  const form = useForm<FormValues>({\n    defaultValues: {\n      symbol: predefinedSymbol || '',\n      priceType: PriceType.Middle,\n      quantityType: QuantityType.QuoteOrderQty\n    }\n  })\n\n  const symbol = form.watch('symbol')\n\n  useEffect(() => {\n    setSymbol(symbol)\n  }, [symbol])\n\n  const [setBinanceSellOrder, response] = useLazyQuery<{ setBinanceBuyOrder: string }>(SET_BINANCE_BUY_ORDER, {\n    fetchPolicy: 'network-only'\n  })\n\n  const save = useCallback(() => {\n    const { priceType, price, quantity, quantityType, quoteOrderQty, symbol: symb } = form.getValues()\n\n    const numericPrice = parseNumber(price)\n\n    if (!priceType) {\n      // TODO\n      console.log('Choose price type')\n    } else if (priceType === PriceType.Price && (Number.isNaN(numericPrice) || numericPrice < 0)) {\n      // TODO\n      console.log('Invalid price')\n    } else {\n      setBinanceSellOrder({\n        variables: {\n          symbol: symb,\n          priceType,\n          price: parseFloat(price) || 0,\n          quantityType,\n          quantity: parseFloat(quantity) || 0,\n          quoteOrderQty: parseFloat(quoteOrderQty) || 0\n        }\n      })\n    }\n  }, [form, setBinanceSellOrder])\n\n  console.log(response.error)\n\n  return (\n    <table className={styles.table}>\n      <tbody>\n        <tr>\n          <td>\n            <Label>Symbol:</Label>\n          </td>\n          <td>\n            <SymbolList form={form} balances={balances} />\n          </td>\n        </tr>\n        <tr>\n          <td>\n            <Label size={42}>Buy on:</Label>\n          </td>\n          <td>\n            <Controller\n              control={form.control}\n              name=\"priceType\"\n              render={({ field: { onBlur, ref, onChange, value } }) => (\n                <RadioGroup onChange={(event, val) => onChange(val)} value={value}>\n                  <Box>\n                    <FormControlLabel value={PriceType.Market} control={<Radio />} label=\"Market\" />\n                  </Box>\n                  <Box>\n                    <FormControlLabel value={PriceType.Middle} control={<Radio />} label=\"Middle\" />\n                  </Box>\n                  <Box>\n                    <FormControlLabel value={PriceType.Price} control={<Radio />} label=\"Price\" />\n                    <Input form={form} name=\"price\" disabled={value !== PriceType.Price} />\n                  </Box>\n                </RadioGroup>\n              )}\n            />\n          </td>\n        </tr>\n        <tr>\n          <td>\n            <Label size={42}>Quantity:</Label>\n          </td>\n          <td>\n            <Controller\n              control={form.control}\n              name=\"quantityType\"\n              render={({ field: { onBlur, ref, onChange, value } }) => (\n                <RadioGroup onChange={(event, val) => onChange(val)} value={value}>\n                  <Box>\n                    <FormControlLabel\n                      value={QuantityType.Quantity}\n                      control={<Radio />}\n                      label=\"Quantity of the base Asset\"\n                    />\n                    <Input form={form} name=\"quantity\" disabled={value !== QuantityType.Quantity} />\n                  </Box>\n                  <Box>\n                    <FormControlLabel\n                      value={QuantityType.QuoteOrderQty}\n                      control={<Radio />}\n                      label=\"Quantity of the BUSD to buy\"\n                    />\n                    <Input form={form} name=\"quoteOrderQty\" disabled={value !== QuantityType.QuoteOrderQty} />\n                  </Box>\n                </RadioGroup>\n              )}\n            />\n          </td>\n        </tr>\n        <tr>\n          <td />\n          <td>\n            <Button color=\"primary\" onClick={save} variant=\"contained\">\n              Place buy order\n            </Button>\n          </td>\n        </tr>\n      </tbody>\n    </table>\n  )\n}\n","import React, { useCallback } from 'react'\nimport { Box, Button, Radio, RadioGroup, FormControlLabel } from '@material-ui/core'\nimport { Controller, useForm } from 'react-hook-form'\nimport { useLazyQuery } from '@apollo/client'\nimport { BinanceBalance, BinanceLastPrice } from '@sw/shared/src/graphql'\nimport { round, parseNumber } from '../../../../utils/mix'\nimport { PriceType, QuantityType } from '../../../../binanceTypes'\nimport { Input } from '../../../../form'\nimport { SET_BINANCE_SELL_ORDER } from '../../../../gqls'\nimport { SymbolList } from '../SymbolList/SymbolList'\nimport styles from '../../styles.module.scss'\n\ntype Props = {\n  assetAmount: number\n  balances: Array<BinanceBalance>\n  symbol: string\n  setSymbol: (symbol: string) => void\n  lastPrice?: BinanceLastPrice\n}\n\ntype FormValues = {\n  priceType: PriceType\n  price: string\n  quantityType: QuantityType\n  quantity: string\n  quoteOrderQty: string\n  symbol: string\n}\n\nexport const BinanceDirectSell = ({ assetAmount, balances, lastPrice, symbol: predefinedSymbol, setSymbol }: Props) => {\n  const form = useForm<FormValues>({\n    defaultValues: {\n      symbol: predefinedSymbol,\n      priceType: PriceType.Middle,\n      quantityType: QuantityType.All\n    }\n  })\n\n  const [setBinanceSellOrder, response] = useLazyQuery<{ setBinanceSellOrder: string }>(SET_BINANCE_SELL_ORDER, {\n    fetchPolicy: 'network-only'\n  })\n\n  const save = useCallback(() => {\n    const { priceType, price, quantity, quantityType, quoteOrderQty, symbol: symb } = form.getValues()\n\n    const numericPrice = parseNumber(price)\n\n    if (!priceType) {\n      // TODO\n      console.log('Choose price type')\n    } else if (priceType === PriceType.Price && (Number.isNaN(numericPrice) || numericPrice < 0)) {\n      // TODO\n      console.log('Invalid price')\n    } else {\n      setBinanceSellOrder({\n        variables: {\n          symbol: symb,\n          priceType,\n          price: parseFloat(price) || 0,\n          quantityType,\n          quantity: parseFloat(quantity) || 0,\n          quoteOrderQty: parseFloat(quoteOrderQty) || 0\n        }\n      })\n    }\n  }, [form, setBinanceSellOrder])\n\n  console.log(response.error)\n\n  return (\n    <table className={styles.table}>\n      <tbody>\n        <tr>\n          <td>Symbol:</td>\n          <td>\n            <SymbolList form={form} balances={balances} onChange={setSymbol} />\n          </td>\n        </tr>\n        <tr>\n          <td>Sell on:</td>\n          <td>\n            <Controller\n              control={form.control}\n              name=\"priceType\"\n              render={({ field: { onBlur, ref, onChange, value } }) => (\n                <RadioGroup onChange={(event, val) => onChange(val)} value={value}>\n                  <Box>\n                    <FormControlLabel value={PriceType.Market} control={<Radio />} label=\"Market\" />\n                  </Box>\n                  <Box>\n                    <FormControlLabel value={PriceType.Middle} control={<Radio />} label=\"Middle\" />\n                  </Box>\n                  <Box>\n                    <FormControlLabel value={PriceType.Price} control={<Radio />} label=\"Price\" />\n                    <Input form={form} name=\"price\" disabled={value !== PriceType.Price} />\n                  </Box>\n                </RadioGroup>\n              )}\n            />\n          </td>\n        </tr>\n        <tr>\n          <td>Quantity:</td>\n          <td>\n            <Controller\n              control={form.control}\n              name=\"quantityType\"\n              render={({ field: { onBlur, ref, onChange, value } }) => (\n                <RadioGroup onChange={(event, val) => onChange(val)} value={value}>\n                  <Box>\n                    <FormControlLabel value={QuantityType.All} control={<Radio />} label=\"All\" />\n                    {assetAmount} ({assetAmount * (lastPrice?.middle || 0)} $)\n                  </Box>\n                  <Box>\n                    <FormControlLabel\n                      value={QuantityType.Quantity}\n                      control={<Radio />}\n                      label=\"Quantity of the base Asset\"\n                    />\n                    <Input form={form} name=\"quantity\" disabled={value !== QuantityType.Quantity} />\n                  </Box>\n                  <Box>\n                    <FormControlLabel\n                      value={QuantityType.QuoteOrderQty}\n                      control={<Radio />}\n                      label=\"Quantity of the BUSD to sell\"\n                    />\n                    <Input form={form} name=\"quoteOrderQty\" disabled={value !== QuantityType.QuoteOrderQty} />\n                  </Box>\n                </RadioGroup>\n              )}\n            />\n          </td>\n        </tr>\n        <tr>\n          <td />\n          <td>\n            <Button color=\"primary\" onClick={save} variant=\"contained\">\n              Place sell order\n            </Button>\n          </td>\n        </tr>\n      </tbody>\n    </table>\n  )\n}\n","import React, { useCallback, useMemo, useState } from 'react'\nimport { Box, Typography } from '@material-ui/core'\nimport { useQuery, useSubscription } from '@apollo/client'\nimport { BinanceAccountInformation, BinanceLastPrice } from '@sw/shared/src/graphql'\n\nimport { ModalTemplate } from '../../components'\nimport { Info } from './modules/Info/Info'\n\nimport { BINANCE_LAST_PRICE_SUBSCRIPTION, GET_BINANCE_ACCOUNT_INFORMATION } from '../../gqls'\n\nimport styles from './styles.module.scss'\n\nimport { BinanceFixedTrailingStop } from './modules/BinanceFixedTrailingStop/BinanceFixedTrailingStop'\nimport { BinanceMovingBuy } from './modules/BinanceMovingBuy/BinanceMovingBuy'\nimport { BinanceDirectBuy } from './modules/BinanceDirectBuy/BinanceDirectBuy'\nimport { BinanceDirectSell } from './modules/BinanceDirectSell/BinanceDirectSell'\nimport { OrderDialogType } from '../../constants'\n\ntype Props = {\n  id: string\n  symbol?: string\n  orderDialogType?: OrderDialogType\n}\n\nexport const Order = ({\n  id: modalId,\n  symbol: predefinedSymbol = '',\n  orderDialogType = OrderDialogType.BinanceDirectBuy\n}: Props) => {\n  const [asset, setAsset] = useState(predefinedSymbol.replace('BUSD', ''))\n  const [symbol, setSymbol] = useState(predefinedSymbol)\n\n  const accountInformationResponse = useQuery<{ getBinanceAccountInformation: BinanceAccountInformation }>(\n    GET_BINANCE_ACCOUNT_INFORMATION,\n    {\n      fetchPolicy: 'network-only',\n      notifyOnNetworkStatusChange: true\n    }\n  )\n\n  const lastPriceResponse = useSubscription<{ binanceLastPrice: BinanceLastPrice }>(BINANCE_LAST_PRICE_SUBSCRIPTION, {\n    variables: {\n      symbol\n    }\n  })\n\n  const setSymbolWrapper = useCallback((smb: string) => {\n    setSymbol(smb)\n    setAsset(smb.replace('BUSD', ''))\n  }, [])\n\n  const balances = useMemo(() => {\n    const blcs = accountInformationResponse?.data?.getBinanceAccountInformation?.balances\n\n    if (Array.isArray(blcs)) {\n      return blcs\n    }\n\n    return []\n  }, [accountInformationResponse?.data?.getBinanceAccountInformation?.balances])\n\n  const busdAmount = useMemo(() => {\n    const result = balances.find((balance) => balance.asset === 'BUSD')\n\n    if (result) {\n      return result\n    }\n\n    return {\n      free: 0,\n      locked: 0\n    }\n  }, [balances])\n\n  const assetAmount = useMemo(() => {\n    if (asset) {\n      const result = balances.find((balance) => balance.asset === asset)\n\n      if (result) {\n        return result.free + result.locked\n      }\n    }\n\n    return 0\n  }, [balances, asset])\n\n  const title = useMemo(() => {\n    switch (orderDialogType) {\n      case OrderDialogType.BinanceDirectBuy:\n        return 'Binance Direct Buy Order'\n\n      case OrderDialogType.BinanceDirectSell:\n        return 'Binance Direct Sell Order'\n\n      case OrderDialogType.BinanceMovingBuy:\n        return 'Binance Moving Buy Order'\n\n      case OrderDialogType.BinanceFixedTrailingStop:\n        return 'Binance Fixed trailing Stop Order'\n\n      default:\n        return 'Order'\n    }\n  }, [orderDialogType])\n\n  return (\n    <>\n      <ModalTemplate header={<Typography variant=\"h5\">{title}</Typography>} modalId={modalId}>\n        <Box className={styles.body}>\n          <Box className={styles.left}>\n            <Info\n              assetAmount={assetAmount}\n              busdAmount={busdAmount}\n              lastPrice={lastPriceResponse?.data?.binanceLastPrice}\n            />\n          </Box>\n          <Box className={styles.right}>\n            {() => {\n              switch (orderDialogType) {\n                case OrderDialogType.BinanceDirectSell:\n                  return (\n                    <BinanceDirectSell\n                      assetAmount={assetAmount}\n                      balances={balances}\n                      symbol={symbol}\n                      setSymbol={setSymbol}\n                      lastPrice={lastPriceResponse?.data?.binanceLastPrice}\n                    />\n                  )\n\n                case OrderDialogType.BinanceFixedTrailingStop:\n                  return (\n                    <BinanceFixedTrailingStop\n                      assetAmount={assetAmount}\n                      balances={balances}\n                      symbol={symbol}\n                      setSymbol={setSymbolWrapper}\n                      lastPrice={lastPriceResponse?.data?.binanceLastPrice}\n                    />\n                  )\n\n                case OrderDialogType.BinanceDirectBuy:\n                  return (\n                    <BinanceDirectBuy\n                      balances={balances}\n                      symbol={symbol}\n                      setSymbol={setSymbol}\n                      lastPrice={lastPriceResponse?.data?.binanceLastPrice}\n                    />\n                  )\n\n                case OrderDialogType.BinanceMovingBuy:\n                  return (\n                    <BinanceMovingBuy\n                      busdAmount={busdAmount}\n                      balances={balances}\n                      symbol={symbol}\n                      setSymbol={setSymbolWrapper}\n                      lastPrice={lastPriceResponse?.data?.binanceLastPrice}\n                    />\n                  )\n                default:\n                  return null\n              }\n            }}\n          </Box>\n        </Box>\n      </ModalTemplate>\n    </>\n  )\n}\n","import React, { useEffect, useState } from 'react'\nimport { useTypedSelector } from '../../redux'\nimport { ModalRoutes } from '../../constants'\nimport { BinanceOrder } from '../BinanceOrder/BinanceOrder'\nimport { Reminder } from '../Reminder/Reminder'\nimport { Note } from '../Note/Note'\nimport { Modal } from '../../components'\nimport { Order } from '../Order/Order'\n\nconst getComponent = (name: ModalRoutes): any => {\n  switch (name) {\n    case ModalRoutes.BinanceOrder:\n      return BinanceOrder\n\n    case ModalRoutes.Reminder:\n      return Reminder\n\n    case ModalRoutes.Note:\n      return Note\n\n    case ModalRoutes.Order:\n      return Order\n\n    default:\n      return () => <div />\n  }\n}\n\nexport const CentralModal = () => {\n  const modalMap = useTypedSelector((state) => state.modal.map)\n\n  const [modalArray, setModalArray] = useState<\n    Array<{ name: ModalRoutes; props: Record<string, any>; open: boolean; id: string }>\n  >([])\n\n  useEffect(() => {\n    const openedModals = new Set()\n\n    const array = Object.entries(modalMap).map(([id, config]) => {\n      openedModals.add(id)\n\n      return {\n        name: config.name,\n        props: config.props,\n        id: config.id,\n        priority: config.priority,\n        open: true\n      }\n    })\n\n    const closedArray = modalArray\n      .filter((config) => !openedModals.has(config.id) && config.open)\n      .map((config) => ({\n        ...config,\n        open: false\n      }))\n\n    setModalArray([...array, ...closedArray])\n  }, [modalMap])\n\n  console.log('central modal: ', modalArray)\n\n  return (\n    <>\n      {modalArray.map((config) => {\n        const Component = getComponent(config.name)\n\n        return (\n          <Modal open={config.open} key={config.id}>\n            <Component {...config.props} id={config.id} />\n          </Modal>\n        )\n      })}\n    </>\n  )\n}\n","import React from 'react'\nimport classNames from 'classnames'\nimport { Box } from '@material-ui/core'\nimport { dispatchers, useTypedSelector } from '../../redux'\nimport styles from './styles.module.scss'\n\nexport const ModalLoader = () => {\n  const showLoader = useTypedSelector((state) => state.modalLoader.ids.length > 0)\n\n  return (\n    <div>\n      <div className={classNames(styles.container, { [styles.visible]: showLoader })} />\n    </div>\n  )\n}\n","import React from 'react'\nimport ReactDOM from 'react-dom'\nimport { IntlProvider } from 'react-intl'\nimport { Provider as ReduxProvider } from 'react-redux'\nimport { ApolloProvider } from '@apollo/client'\n\nimport {\n  createMuiTheme,\n  makeStyles,\n  createStyles,\n  Theme as AugmentedTheme,\n  ThemeProvider\n} from '@material-ui/core/styles'\nimport { orange, blue, purple } from '@material-ui/core/colors'\n\nimport { apolloClient } from './api/apollo'\nimport { StoreProvider } from './contexts'\nimport { dictionary } from './locales'\nimport { store } from './redux'\nimport { initSagas } from './redux/sagas'\n\nimport './styles.module.scss'\n\nimport { Router } from './Router'\n// import {ModalStack} from \"./modules/ModalStack/ModalStack\";\nimport { CentralModal } from './modules/CentralModal/CentralModal'\nimport { ModalLoader } from './modules/ModalLoader/ModalLoader'\n\ninitSagas()\n\nconst locale = 'cs'\n\nconst theme = createMuiTheme({\n  palette: {\n    primary: {\n      main: blue[700]\n    }\n  },\n  overrides: {\n    // MuiAppBar:{\n    //   colorPrimary: {\n    //     backgroundColor: purple[500]\n    //   }\n    // }\n  }\n})\n\nReactDOM.render(\n  <ApolloProvider client={apolloClient}>\n    <ReduxProvider store={store}>\n      <IntlProvider messages={dictionary[locale]} locale={locale} defaultLocale=\"en\">\n        <StoreProvider>\n          <ThemeProvider theme={theme}>\n            <Router />\n            <CentralModal />\n            <ModalLoader />\n          </ThemeProvider>\n        </StoreProvider>\n      </IntlProvider>\n    </ReduxProvider>\n  </ApolloProvider>,\n  document.getElementById('root')\n)\n","export const round = (value: number | string | undefined, digits?: number) => {\n  if (value === undefined || value === null) {\n    return value\n  }\n\n  return parseFloat(value.toString()).toFixed(digits || 2)\n}\n\nexport const parseNumber = (price: any) => {\n  if (typeof price === 'number') {\n    return price\n  }\n\n  if (typeof price === 'string') {\n    const stringPrice = price.replace(/[^0-9]/g, '')\n    if (stringPrice.length) {\n      return parseFloat(stringPrice)\n    }\n  }\n\n  return Number.NaN\n}\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"styles_container__1wGJS\",\"form\":\"styles_form__3jouQ\",\"symbolInput\":\"styles_symbolInput__1hGzQ\",\"white\":\"styles_white__164RM\",\"loading\":\"styles_loading__34c-R\",\"show\":\"styles_show__jnsBR\",\"outsideClickLayer\":\"styles_outsideClickLayer__1ZYic\",\"listStaticContainer\":\"styles_listStaticContainer__1GvLM\",\"listFloatingContainer\":\"styles_listFloatingContainer__3igJW\",\"listItem\":\"styles_listItem__TQVKr\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"body\":\"styles_body__1DnXu\",\"one\":\"styles_one__1gbaw\",\"two\":\"styles_two__OjEUu\",\"table\":\"styles_table__2I4jQ\"};","export { default as NotificationsIcon } from '@material-ui/icons/NotificationsNone'\nexport { default as VisibilityOffIcon } from '@material-ui/icons/VisibilityOff'\nexport { default as AddCircleOutlineIcon } from '@material-ui/icons/AddCircleOutline'\n\nexport {\n  Add as AddIcon,\n  Save as SaveIcon,\n  Close as CloseIcon,\n  Refresh as RefreshIcon,\n  Visibility as VisibilityIcon,\n  Dashboard as DashboardIcon,\n  Event as EventIcon,\n  ExitToApp as ExitToAppIcon,\n  Note as NoteIcon,\n  Settings as SettingsIcon,\n  Timeline as TimelineIcon,\n  List as ListIcon\n} from '@material-ui/icons'\n"],"sourceRoot":""}